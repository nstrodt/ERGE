(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    236451,       5435]
NotebookOptionsPosition[    232310,       5299]
NotebookOutlinePosition[    232676,       5315]
CellTagsIndexPosition[    232633,       5312]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ERGE v2", "Title",
 CellChangeTimes->{{3.6441463777826633`*^9, 3.6441463877389917`*^9}, {
  3.6903007235425577`*^9, 3.690300725415166*^9}}],

Cell[CellGroupData[{

Cell["Begin", "Section",
 CellChangeTimes->{{3.6441465192652607`*^9, 3.6441465209075813`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<ERGE`\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Unprotect", "@@", 
   RowBox[{"Names", "[", "\"\<ERGE`*\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@@", 
    RowBox[{"Names", "[", "\"\<ERGE`*\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$ERGEMainVersion", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$ERGEVersion", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$ERGEBuiltVersion", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$ERGEVersionNumber", "=", 
    RowBox[{
     RowBox[{"ToString", "@", "$ERGEMainVersion"}], "~~", "\"\<.\>\"", "~~", 
     RowBox[{"ToString", "@", "$ERGEVersion"}], "~~", "\"\<.\>\"", "~~", 
     RowBox[{"ToString", "@", "$ERGEBuiltVersion"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\\nERGE package loaded.\\n\\nVersion \>\"", "<>", "$ERGEVersionNumber",
    "<>", "\"\<.\\n\\nCopyright (C) 2016-2017, Nils Strodthoff.\\n\>\""}], 
  "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.644146534779478*^9, 3.644146631017542*^9}, {
   3.644147075953807*^9, 3.6441470833967247`*^9}, {3.644147136985469*^9, 
   3.6441471431406107`*^9}, {3.6484693783598347`*^9, 3.648469378455214*^9}, 
   3.6495819491172333`*^9, {3.689617664186219*^9, 3.68961767242721*^9}, {
   3.690071862061296*^9, 3.690071862438898*^9}, {3.6903004876719027`*^9, 
   3.690300487683181*^9}, {3.690302726665925*^9, 3.6903027292872477`*^9}, {
   3.6912302510884447`*^9, 3.691230251258252*^9}, {3.6933477040724087`*^9, 
   3.693347708650476*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"doEDSE", "::", "usage"}], "=", 
   "\"\<Derives the symbolic DSE for a given n-point function in a specified \
theory.\nParameters:\nfields: a list of the form {{bosons},{fermions}} which \
can/ have to contain again sublists of two elements in case of fermionic \
fields/complex fields. e.g. {{phi}{{psi,psib}}} for a Yukawa theory\n\
interactions: list of interaction terms to be considered (including \
non-diagonal propagators) permutations are automatically considered e.g. \
{{phi,phi,phi},{phi,phi,phi,phi},{phi,psi,psib}} for a Yukawa theory with \
cubic and quartic bosonic interactions.\nDerivatives: specifies the npt \
function for which the flow equation should be derived e.g. {phi,phi} for a \
bosonic propagator. All derivatives are understood as left derivatives with \
the rightmost entry acting first unless DoFunInput==True\n\nOptions:\n\
DoFunOutput->True/False convert to DoFun-compatible syntax and conventions \
(op function, vertex definition)\nDoFunInput->True/False derivatives in DoFun \
compatible form (left/right derivatives for afermions/fermions; leftmost \
derivative acts first)\nBareVertices->{} allows to pass a list of bare \
vertices (by default Interactions will be used)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"doEMAGIC", "::", "usage"}], "=", 
   "\"\<Derives a generalized DSE using the given equation (and derivatives \
of it)\nfields: a list of the form {{bosons},{fermions}} which can/ have to \
contain again sublists of two elements in case of fermionic fields/complex \
fields. e.g. {{phi}{{psi,psib}}} for a Yukawa theory\ninteractions: list of \
interaction terms to be considered (including non-diagonal propagators) \
permutations are automatically considered e.g. \
{{phi,phi,phi},{phi,phi,phi,phi},{phi,psi,psib}} for a Yukawa theory with \
cubic and quartic bosonic interactions.\nDerivatives: specifies the npt \
function for which the flow equation should be derived e.g. {phi,phi} for a \
bosonic propagator. All derivatives are understood as left derivatives with \
the rightmost entry acting first\nEqn: generating equation; append x to \
fieldnames which should be substituted by G*der+phi e.g. phi->phix\nNotation \
for Eqn: TrMMA[...], allowed symbols: field[index], fieldx[index], \
Gamma0[field1[index1],...], Der[field[index]]; use iy1,iy2,... for dummy \
indices, external indices should be denoted by i1,i2,...\n\
DOEDSE->True/False:set to true if called from doEDSE (required for DoFun \
conversion)\n\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"doERGE", "::", "usage"}], "=", 
    "\"\<Derives the symbolic flow equation for a given n-point function in a \
specified theory.\nParameters:\nfields: a list of the form \
{{bosons},{fermions}} which can/ have to contain again sublists of two \
elements in case of fermionic fields/complex fields. e.g. {{phi}{{psi,psib}}} \
for a Yukawa theory\ninteractions: list of interaction terms to be considered \
(including non-diagonal propagators) permutations are automatically \
considered e.g. {{phi,phi,phi},{phi,phi,phi,phi},{phi,psi,psib}} for a Yukawa \
theory with cubic and quartic bosonic interactions.\nDerivatives: specifies \
the npt function for which the flow equation should be derived e.g. {phi,phi} \
for a bosonic propagator. All derivatives are understood as left derivatives \
with the rightmost entry acting first unless DoFunInput==True\n\nOptions:\n\
DoFunOutput->True/False convert to DoFun-compatible syntax and conventions \
(op function, vertex definition)\nDoFunInput->True/False derivatives in DoFun \
compatible form (left/right derivatives for afermions/fermions; leftmost \
derivative acts first)\nOffDiagonalRegulators->True/False takes into account \
off-diagonal regulator terms (i.e. all explicitly specified propagators via \
interaction terms)\nMasterEqn->TrMMA[dtRMMMA,etaMMMA,GMMMA]\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefineFieldSpecificERGE", "::", "usage"}], "=", 
   "\"\<Prepares ERGE for call of getAEERGE\nParameter:\nlist of fields \
(possibly with sublists of two elements for fermions/ complex bosons for \
DoFun compatibility) where every entry is expected to be of the form \
field1[mom,index1,...,indexn] e.g. \
DefineFieldSpecificERGE[{{psi[mom,color],psib[mom,color]},phi[mom,flav]}]\>\"\
"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getAEERGE", "::", "usage"}], "=", 
    "\"\<Returns algebraic expression for a given symbolic expression\n\
Parameters:\nsymbolic_eq: output of doERGE/doEDSE/doEMAGIC\nfieldlist: list \
matching that of the corresponding call used to create the corresponding \
symbolic expression; every sublist is expected to be of the form \
{field,index_in_symbolic_eq,...}, where ... denotes all explicit field \
indices specified in DefineFieldSpecificERGE for that specific field type.\n\
e.g. getAEERGE[myres,{{psi,i1,p1,a1},{psib,i2,p2,a2}}]\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DoFunOutput", "::", "usage"}], "=", "\"\<Option in doERGE\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DoFunInput", "::", "usage"}], "=", "\"\<Option in doERGE\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MasterEqn", "::", "usage"}], "=", "\"\<Option in doERGE\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OffDiagonalRegulators", "::", "usage"}], "=", 
   "\"\<Option in doERGE\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetFieldsToZero", "::", "usage"}], "=", 
   "\"\<Option in doEMAGIC\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DoEDSE", "::", "usage"}], "=", "\"\<Option in doEMAGIC\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BareVertices", "::", "usage"}], "=", 
   "\"\<Option in do EDSE\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetExplicitTrue", "::", "usage"}], "=", 
  "\"\<adds explicit->True to result of getAEERGE\>\""}], \
"\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mom", "::", "usage"}], "=", 
   "\"\<The first argument of any field in DefineFieldSpecificERGE always has \
to be of this type\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deltamom", "::", "usage"}], "=", 
   "\"\<ERGE notation for momentum deltafunction\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"explicitERGE", "::", "usage"}], "=", 
    "\"\<explicitERGE->True appended to propagators/vertices in ERGE mode of \
getAEERGE\>\""}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"G", "::", "usage"}], "=", "\"\<propagator symbol in ERGE\>\""}],
     ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Gamman", "::", "usage"}], "=", 
     "\"\<vertex symbol in ERGE\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Gamma0n", "::", "usage"}], "=", 
     "\"\<bare vertex symbol in ERGE\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dtR", "::", "usage"}], "=", 
     "\"\<regulator symbol in ERGE\>\""}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"doERGE", "::", "firstformscriptfailed"}], "=", 
   "\"\<Execution of the first FORM script failed. Aborting.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"doERGE", "::", "secondformscriptfailed"}], "=", 
   "\"\<Execution of the second FORM script failed. Aborting.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"doERGE", "::", "fieldsundefinedinteractions"}], "=", " ", 
   "\"\<The following fields specified in the interactions list were not \
defined in the fields list: `1`. Aborting.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"doERGE", "::", "fieldsundefinedderivatives"}], "=", " ", 
   "\"\<The following fields specified in the derivative list were not \
defined in the fields list: `1`. Aborting.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"doERGE", "::", "fieldspecificationinvalid"}], "=", 
   "\"\<The field argument has to contain two sublists, see ?doERGE\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"doERGE", "::", "sortfields"}], "=", 
   "\"\<DoFunInput==True requires a derivative list sorted into fermions, \
afermions and bosons. Aborting.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"doEDSE", "::", "noderivativesspecified"}], "=", 
   "\"\<DoEDSE requires a non-empty derivative argument. Aborting.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DebuggingModeERGE", "::", "usage"}], "=", 
   "\"\<DebuggingMode[True/False] prints extra information if set to \
true.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DebuggingModeERGE", "::", "badarg"}], "=", 
    "\"\<DebuggingMode was called with an invalid argument. Argument must be \
True or False.\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DefineFormExecutableERGE", "::", "usage"}], "=", 
    "\"\<DefineFormExecutable[path] sets the path the Package looks for the \
FORM executable.\n\nYou can also use tform (a parallel version of FORM) by \
evaluating \\\"DefineFormExecutable[tform -wN]\\\", where you have to replace \
N with the number of worker threads you want to use.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DefineFormExecutableERGE", "::", "badarg"}], "=", 
    "\"\<DefineFormExecutable was called with an invalid argument. Argument \
must be a string.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DefineFormExecutableERGE", "::", "formnotfound"}], "=", 
    "\"\<The specified FORM executable could not be found.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DefineFormExecutableERGE", "::", "cygwin"}], "=", 
    "\"\<FORM exited with error code -1073741515. This hints at a problem \
with your Cygwin installation.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ERGE", "::", "directorynotfound"}], "=", 
   "\"\<The package could not locate the package folder in your Applications \
folder.\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBmIQ7fYn/f2SxteOfHsvgOkV2/9/BtF3OYS/gGjRgtsn
vwLpH1Ump0B07ztXjW9Aes+Lp2BahzXSHERXn2m3AdF6jG8ivwPp0HbOWBC9
apWfR0PLa8ewHZO8QLTNnYwKED3ls3UniN6kzMTSCKST41vUQfQa8/bui0B6
l8fMXhDNxKd8FUSLM127D6K/ehalXAbSTWsYMkD0rv6Jk66A9NULzwPRVjfn
Nh5rB+qTl24D0Z1LfwQYdQPdZX07EET7C90JA9FBX7LDQXR6Xx17BpDmsGwG
01NYg08b9rx2LPogcg9EL1tW+t0USHMu/cBgBqQPlAgagugt60rA9MRV8Ykp
QPrl3z+pINrG18Cku++1o5lukzmI9vS+vOLZhteOXjzH1oDo3toLO0G0W9y/
YyDa/OKT0yD6eHH9PRCdG9bxCET/U2N9DqJfu894DaKnya/+AqIBnaLrzw==

  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options and Definitions", "Section",
 CellChangeTimes->{{3.6897168802773743`*^9, 3.689716888636754*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"packageName", "=", "\"\<ERGE\>\""}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"determine", " ", "the", " ", "FormTracer", " ", "directory"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"packageDirectory", "=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"DirectoryQ", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
         "packageName"}], "}"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "installed", " ", "in", " ", "the", " ", "user", " ", "directory"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
       "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
        "packageName"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DirectoryQ", "[", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{
          "$BaseDirectory", ",", "\"\<Applications\>\"", ",", "packageName"}],
           "}"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"installed", " ", "systemwide"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
         "$BaseDirectory", ",", "\"\<Applications\>\"", ",", "packageName"}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"ERGE", "::", "directorynotfound"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
         "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
          "packageName"}], "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"defaultFormExecutables", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"packageDirectory", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}], ",", 
          "\"\<form.exe\>\"", ",", "\"\<form\>\""}], "]"}]}], "}"}], "]"}], 
     RowBox[{"(*", 
      RowBox[{
      "has", " ", "to", " ", "be", " ", "the", " ", "first", " ", "entry", 
       " ", "due", " ", "to", " ", "InstallFORM"}], "*)"}], ",", 
     "\[IndentingNewLine]", "\"\<form\>\"", ",", 
     RowBox[{"(*", 
      RowBox[{
      "should", " ", "work", " ", "if", " ", "form", " ", "lies", " ", "in", 
       " ", "any", " ", "executable", " ", "path"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
       "$PathnameSeparator", ",", "\"\<usr\>\"", ",", "\"\<bin\>\"", ",", 
        "\"\<form\>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
       "$PathnameSeparator", ",", "\"\<usr\>\"", ",", "\"\<local\>\"", ",", 
        "\"\<bin\>\"", ",", "\"\<form\>\""}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
       "$PathnameSeparator", ",", "\"\<opt\>\"", ",", "\"\<bin\>\"", ",", 
        "\"\<form\>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{
        "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
         "\"\<FormLink\>\"", ",", "\"\<bin\>\"", ",", 
         RowBox[{"Switch", "[", 
          RowBox[{"$OperatingSystem", ",", "\"\<Unix\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<linux64\>\"", ",", "\"\<form\>\""}], "}"}], ",", 
           "\"\<MacOSX\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<macosx64\>\"", ",", "\"\<form\>\""}], "}"}], ",", 
           "\"\<Windows\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<windows\>\"", ",", "\"\<form.exe\>\""}], "}"}]}], 
          "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"formExecutable", "=", "\"\<\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"is", " ", "set", " ", "automatically", " ", "below"}], ",", " ", 
    
    RowBox[{"can", " ", "be", " ", "changed", " ", "by", " ", 
     RowBox[{"DefineFormExecutable", "[", "path", "]"}]}]}], "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"formChecked", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"formInfo", "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"debuggingMode", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cacheFilesDirectory", "=", "\"\<ERGECache\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DebuggingModeERGE", "[", 
    RowBox[{"yesno_", "/;", 
     RowBox[{"BooleanQ", "[", "yesno", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"debuggingMode", "=", "yesno"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Debugging mode \>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
         "debuggingMode", ",", "\"\<enabled\>\"", ",", "\"\<disabled\>\""}], 
         "]"}], "<>", "\"\<.\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DebuggingModeERGE", "[", "___", "]"}], ":=", 
    RowBox[{"Message", "[", 
     RowBox[{"DebuggingModeERGE", "::", "badarg"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"checkFormExecutable", "[", 
     RowBox[{"quietMode_:", "False"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "formProcessResult", ",", "formResponse", ",", "formExitCode"}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Don", "'"}], "t", " ", "check", " ", "whether", " ", "FORM", 
        " ", "works", " ", "if", " ", "it", " ", "was", " ", "already", " ", 
        RowBox[{"checked", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"formChecked", ",", 
         RowBox[{"Return", "[", "True", 
          RowBox[{"(*", 
           RowBox[{"=", "formChecked"}], "*)"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Check", " ", "if", " ", "FORM", " ", "works"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"formProcessResult", "=", 
        RowBox[{"Quiet", "[", 
         RowBox[{"RunProcess", "[", 
          RowBox[{"{", 
           RowBox[{"formExecutable", ",", "\"\<-v\>\""}], "}"}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"formResponse", "=", 
        RowBox[{"formProcessResult", "[", "\"\<StandardOutput\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"formExitCode", "=", 
        RowBox[{"formProcessResult", "[", "\"\<ExitCode\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"formChecked", "=", 
        RowBox[{"formExitCode", "===", "0"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"formChecked", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"formInfo", "=", 
           RowBox[{"StringTrim", "[", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{"formResponse", ",", "EndOfLine"}], "]"}], ",", 
               RowBox[{
                RowBox[{"Not", "@", 
                 RowBox[{"StringContainsQ", "[", 
                  RowBox[{"#", ",", "\"\<out of\>\""}], "]"}]}], "&"}]}], 
              "]"}], "]"}], "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"formInfo", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Not", "[", "quietMode", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"DefineFormExecutableERGE", "::", "formnotfound"}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"formExitCode", "===", 
                 RowBox[{"-", "1073741515"}]}], "&&", 
                RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}]}], ",", 
               RowBox[{
                RowBox[{"Message", "[", 
                 RowBox[{"DefineFormExecutableERGE", "::", "cygwin"}], "]"}], 
                ";"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "formChecked", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "try", " ", "to", " ", "find", " ", "the", " ", "FORM", " ", "executable", 
    " ", "trying", " ", "all", " ", "commands", " ", "in", " ", 
    "defaultFormExecutables"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Catch", "[", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"formExecutable", "=", "tmpFormExecutable"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"checkFormExecutable", "[", "True", "]"}], ",", 
            RowBox[{"Throw", "[", "$Success", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"tmpFormExecutable", ",", "defaultFormExecutables"}], 
          "}"}]}], "]"}], "]"}], "===", "$Success"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Using \>\"", "<>", "formInfo", "<>", "\"\<.\>\""}], "]"}],
       ";"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "packageName", "<>", 
        "\"\< could not locate the FORM executable. Please install FORM via \
InstallFORM[].\nIf FORM is installed on your system, use \
DefineFormExecutableERGE[pathToExecutable] to specify the path. \nYou may \
also obtain FORM at http://www.nikhef.nl/~form or from \
https://github.com/vermaseren/form.\>\""}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefineFormExecutableERGE", "[", "path_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"formExecutable", "=", "path"}], ";", "\[IndentingNewLine]", 
      RowBox[{"formChecked", "=", "False"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"checkFormExecutable", "[", "]"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "formInfo", "]"}], ";"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DefineFormExecutableERGE", "[", "___", "]"}], ":=", 
    RowBox[{"Message", "[", 
     RowBox[{"DefineFormExecutableERGE", "::", "badarg"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"global", " ", "switch", " ", "to", " ", "order", " ", 
    RowBox[{"fermions", "/", "afermions"}], " ", "in", " ", "alphabetical", 
    " ", "order", " ", "for", " ", "DoFun", " ", "Plotting"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reorderfermionic", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ERGEfieldsspecific", "=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.690070816725325*^9, 3.690070847163357*^9}, 
   3.690071036135392*^9, {3.690071077191691*^9, 3.690071096390129*^9}, {
   3.69007257281669*^9, 3.6900725797246532`*^9}, {3.690300487640608*^9, 
   3.690300505494659*^9}, {3.690324843034074*^9, 3.6903248630092173`*^9}, {
   3.69032513519243*^9, 3.6903251673967247`*^9}, {3.690325220402336*^9, 
   3.69032522122747*^9}, {3.690585211533283*^9, 3.690585242254902*^9}, {
   3.690585312667243*^9, 3.6905853130692387`*^9}, {3.690866766491126*^9, 
   3.690866767520431*^9}, {3.690866905115726*^9, 3.6908669063872538`*^9}, {
   3.696857518114759*^9, 3.696857526588202*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Aux. Functions", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.689382388775502*^9, 3.689382396695014*^9}}],

Cell[CellGroupData[{

Cell["Misc", "Subsection",
 CellChangeTimes->{{3.690072145159528*^9, 3.690072151443429*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stringListJoin", "[", "x_", "]"}], ":=", 
   RowBox[{"Riffle", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", "#", "]"}], "&"}], "/@", "x"}], ",", 
     "\"\<,\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6893646523818913`*^9, 3.68936471046065*^9}, 
   3.690071981570284*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"countinteraction", "[", 
    RowBox[{"x_", ",", "fields_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", "fields"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689456629354731*^9, 3.6894566305137777`*^9}, {
  3.689521099347069*^9, 3.689521101778482*^9}, {3.689521195327681*^9, 
  3.689521206512519*^9}, {3.689521317922287*^9, 3.6895213291654987`*^9}, {
  3.689521393990493*^9, 3.689521394307295*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"countinteractions", "[", 
    RowBox[{"interactions_", ",", "fields_"}], "]"}], ":=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"countinteraction", "[", 
       RowBox[{"#", ",", "fields"}], "]"}], "&"}], "/@", "interactions"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689521322324151*^9, 3.689521398732688*^9}, {
  3.6920008853838387`*^9, 3.692000891634438*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"selectinteractionspre", "[", "x_", "]"}], ":=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Subsets", "[", 
     RowBox[{"x", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "[", "x", "]"}], "-", "2"}], "}"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.693349800140279*^9, {3.6936016259505873`*^9, 3.6936016503014917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"selectallprops", "[", "x_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "tmp", "}"}], ",", 
     RowBox[{
      RowBox[{"tmp", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", " ", 
      RowBox[{"Union", "[", 
       RowBox[{"tmp", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], "/@", "tmp"}]}], 
       "]"}]}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "props", " ", "that", " ", "might", " ", "lead", " ", "to", 
    " ", "valid", " ", "vertices", " ", "after", " ", "derivative"}], 
   "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.69360256902836*^9, 3.693602641359857*^9}, 
   3.693602684071261*^9, {3.6936027367137127`*^9, 3.693602754238346*^9}, {
   3.693603222960044*^9, 3.693603248444377*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Generating FORM snippets", "Subsection",
 CellChangeTimes->{{3.690301566129188*^9, 3.690301573842801*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"setpropagatorstozero", "[", "x_", "]"}], ":=", 
  RowBox[{"\"\<id G(\>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"x", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<(ix1?),\>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"x", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
   "\"\<(ix2?))=0;\>\""}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.693602078565452*^9, 3.693602162717557*^9}, {
  3.693603831259015*^9, 3.6936038314775133`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"converttoformstring", "[", "x_", "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"ExportString", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "/.", 
         RowBox[{
          RowBox[{"TrMMA", "[", "a__", "]"}], "\[Rule]", 
          RowBox[{"Global`TrMMA", "[", "a", "]"}]}]}], "/.", 
        RowBox[{
         RowBox[{"Gamma0", "[", "a__", "]"}], "\[Rule]", 
         RowBox[{"Global`Gamma0", "[", "a", "]"}]}]}], ",", "\"\<Text\>\""}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<[\>\"", "\[Rule]", "\"\<(\>\""}], ",", 
       RowBox[{"\"\<]\>\"", "\[Rule]", "\"\<)\>\""}], ",", 
       RowBox[{"\"\<MMA\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.693344789179654*^9, 3.6933448023552113`*^9}, 
   3.693344833717636*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"derivativestring", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}], ",", "\"\<-\>\"", ",", "\"\<\>\""}], "]"}], "<>", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\"\<Der(\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Head", "[", "#", "]"}], "]"}], "<>", "\"\<(i\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<))*\>\""}], "&"}],
       "/@", 
      RowBox[{"x", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689363824675486*^9, 3.6893638523967733`*^9}, {
   3.689363890396262*^9, 3.689364011879468*^9}, {3.689364070028269*^9, 
   3.6893643377239323`*^9}, {3.689364381957472*^9, 3.689364413625211*^9}, 
   3.689365249107869*^9, 3.6893654776455097`*^9, 3.690072002355476*^9, {
   3.690300255783826*^9, 3.6903002597436953`*^9}, {3.691220983687469*^9, 
   3.691221045399911*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fieldargsymasymstring", "[", 
    RowBox[{"bosons_", ",", "fermions_"}], "]"}], ":=", 
   RowBox[{"\"\<Function \>\"", "<>", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"Riffle", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"bosons", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "<>", 
            "\"\<arg(symmetric)\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "bosons", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"fermions", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "<>", 
            "\"\<arg(antisymmetric)\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "fermions", "]"}]}], "}"}]}], "]"}]}], 
        "]"}], ",", "\"\<,\>\""}], "]"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689363824675486*^9, 3.6893638523967733`*^9}, {
   3.689363890396262*^9, 3.689364011879468*^9}, {3.689364070028269*^9, 
   3.6893643377239323`*^9}, {3.689364381957472*^9, 3.689364413625211*^9}, 
   3.689365249107869*^9, 3.6893654776455097`*^9, 3.690072002355476*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gammakeepstring", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"\"\<id Gammakeep(\>\"", "<>", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"Riffle", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "<>", "\"\<(i\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<?)\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
       "\"\<,\>\""}], "]"}], "]"}], "<>", "\"\<)=\>\"", "<>", 
    RowBox[{"ToString", "[", "y", "]"}], "<>", "\"\<;\\n\>\""}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6893661939172163`*^9, 3.6893662536309013`*^9}, {
  3.689366302685708*^9, 3.6893663083782377`*^9}, {3.6893663410466223`*^9, 
  3.6893664021861*^9}, {3.6893664408797703`*^9, 3.6893664818171177`*^9}, {
  3.689366611252306*^9, 3.689366632031674*^9}, {3.689366998374083*^9, 
  3.689366998515656*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xreplacement", "[", 
   RowBox[{"fieldindex_", ",", "props_", ",", "fields_"}], "]"}], ":=", 
  RowBox[{"\"\<id once \>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"fields", "[", 
     RowBox[{"[", "fieldindex", "]"}], "]"}], "]"}], "<>", "\"\<x(ix0?)=\>\"",
    "<>", 
   RowBox[{"StringJoin", "@@", 
    RowBox[{"Riffle", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\"\<G(\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<(ix0),\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<(ix\>\"", "<>", 
         RowBox[{"ToString", "[", "fieldindex", "]"}], "<>", 
         "\"\<))*Der(\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<(ix\>\"", "<>", 
         RowBox[{"ToString", "[", "fieldindex", "]"}], "<>", "\"\<))\>\""}], 
        " ", "&"}], "/@", 
       RowBox[{"Select", "[", 
        RowBox[{"props", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
           RowBox[{"fields", "[", 
            RowBox[{"[", "fieldindex", "]"}], "]"}]}], "&"}]}], "]"}]}], ",", 
      "\"\<+\>\""}], "]"}]}], "<>", "\"\<+\>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"fields", "[", 
     RowBox[{"[", "fieldindex", "]"}], "]"}], "]"}], "<>", 
   "\"\<(ix0);\\nSum ix\>\"", "<>", 
   RowBox[{"ToString", "[", "fieldindex", "]"}], "<>", 
   "\"\<;\>\""}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.691850219613962*^9, 3.6918502582538757`*^9}, {
   3.691850315620079*^9, 3.691850363347383*^9}, {3.691850443715157*^9, 
   3.691850475873003*^9}, {3.691850730560006*^9, 3.691850847526682*^9}, {
   3.691850882053104*^9, 3.6918509796799917`*^9}, {3.691851232575061*^9, 
   3.691851304653159*^9}, {3.691851458815277*^9, 3.691851463738166*^9}, {
   3.6918515643773127`*^9, 3.691851591464703*^9}, {3.691851647841386*^9, 
   3.691851674905223*^9}, {3.6918517568591423`*^9, 3.69185191319589*^9}, {
   3.691852008956193*^9, 3.691852058858082*^9}, {3.691852098835182*^9, 
   3.691852149126059*^9}, {3.691852232224806*^9, 3.6918522986788816`*^9}, {
   3.691852352048955*^9, 3.691852428453517*^9}, {3.69185270587811*^9, 
   3.691852706037561*^9}, {3.692715859181848*^9, 3.692715865818644*^9}, 
   3.6927159167897463`*^9, {3.6927159469031773`*^9, 3.692715990276312*^9}, 
   3.6927182699981728`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Generating Matrices", "Subsection",
 CellChangeTimes->{{3.69007207013843*^9, 3.690072089770173*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GMtr", "[", 
     RowBox[{
     "i1_", ",", "i2_", ",", "fields_", ",", "props_", ",", "name_", ",", 
      "trindex_"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"props", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"fields", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"fields", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"name", "[", 
         RowBox[{"trindex", ",", 
          RowBox[{
           RowBox[{"fields", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "i1", "]"}], ",", 
          RowBox[{
           RowBox[{"fields", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", "i2", "]"}]}], "]"}], ",", 
        "0"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "fields", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "fields", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GLtr", "[", 
     RowBox[{
     "i1_", ",", "i2_", ",", "field1_", ",", "fields_", ",", "props_", ",", 
      "name_", ",", "trindex_"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"props", ",", 
          RowBox[{"{", 
           RowBox[{"field1", ",", 
            RowBox[{"fields", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"name", "[", 
         RowBox[{"trindex", ",", 
          RowBox[{"field1", "[", "i1", "]"}], ",", 
          RowBox[{
           RowBox[{"fields", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", "i2", "]"}]}], "]"}], ",", 
        "0"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "fields", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GRtr", "[", 
     RowBox[{
     "i1_", ",", "i2_", ",", "field2_", ",", "fields_", ",", "props_", ",", 
      "name_", ",", "trindex_"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"props", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"fields", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "field2"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"name", "[", 
         RowBox[{"trindex", ",", 
          RowBox[{
           RowBox[{"fields", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", "i1", "]"}], ",", 
          RowBox[{"field2", "[", "i2", "]"}]}], "]"}], ",", "0"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "fields", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GammaMtr", "[", 
     RowBox[{
     "extfields_", ",", "indices_", ",", "interactionscount_", ",", "fields_",
       ",", "dualfields_", ",", "trindex_"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"interactionscount", ",", 
          RowBox[{"countinteraction", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Head", "/@", "extfields"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"fields", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"fields", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
            "fields"}], "]"}]}], "]"}], ",", 
        RowBox[{"Global`GammaMMA", "@@", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "trindex", "}"}], ",", "extfields", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"fields", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"indices", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"fields", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"indices", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ",",
         "0"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "fields", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Length", "[", "fields", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"etaM", "[", 
    RowBox[{"bosonlist_", ",", "fieldlist_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[Equal]", "j"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"bosonlist", ",", 
             RowBox[{"fieldlist", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "1", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "fieldlist", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "[", "fieldlist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689520293742882*^9, 3.689520348580106*^9}, {
   3.689520682906932*^9, 3.689520684928289*^9}, 3.689521409902896*^9, {
   3.689521674650794*^9, 3.68952168405114*^9}, {3.68952183637922*^9, 
   3.689521843629806*^9}, {3.6895396565790586`*^9, 3.6895396624107647`*^9}, {
   3.689542612079502*^9, 3.689542626561071*^9}, {3.689542788202017*^9, 
   3.689542793097342*^9}, {3.6895431227522707`*^9, 3.689543137572207*^9}, {
   3.689544042550585*^9, 3.689544064434843*^9}, {3.6895601110563917`*^9, 
   3.689560123423253*^9}, 3.689605800502832*^9, {3.689605864919512*^9, 
   3.6896058704161797`*^9}, {3.689605965375639*^9, 3.689605976717648*^9}, {
   3.6896210545674467`*^9, 3.689621056527417*^9}, {3.689622635506214*^9, 
   3.6896226427745733`*^9}, {3.689975514785584*^9, 3.689975529581983*^9}, {
   3.6900503091819487`*^9, 3.690050322301467*^9}, {3.690215559977838*^9, 
   3.690215578490622*^9}, {3.690219396806098*^9, 3.690219409219089*^9}, {
   3.691945064080844*^9, 3.691945146816001*^9}, 3.691946091587577*^9, {
   3.691946245324121*^9, 3.691946272663028*^9}, {3.691946355898272*^9, 
   3.691946537592782*^9}, {3.691946690879508*^9, 3.6919467050907707`*^9}, {
   3.691947025694509*^9, 3.691947032636484*^9}, {3.691947592418046*^9, 
   3.6919475963398743`*^9}, {3.691947677149942*^9, 3.691947714552217*^9}, {
   3.691947942252882*^9, 3.691947958142508*^9}, {3.691948103881555*^9, 
   3.6919481134583187`*^9}, {3.691948241507757*^9, 3.6919482461429863`*^9}, {
   3.691948394026917*^9, 3.691948426489748*^9}, {3.691948488510015*^9, 
   3.691948493246429*^9}, {3.6939450894506693`*^9, 3.693945152988214*^9}, {
   3.693945541808846*^9, 3.6939455541253347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"toMatrix", "[", 
    RowBox[{
    "x_", ",", "i1_", ",", "i2_", ",", "trindex_", ",", "fields_", ",", 
     "dualfields_", ",", "bosons_", ",", "regulatorprops_", ",", "fullprops_",
      ",", "interactionscount_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", "x", "]"}], ",", 
         RowBox[{"x", "*", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"Length", "[", "fields", "]"}], "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"x", "===", "Global`GM"}], ",", 
           RowBox[{"GMtr", "[", 
            RowBox[{
            "i1", ",", "i2", ",", "fields", ",", "fullprops", ",", 
             "Global`GMMA", ",", "trindex"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"x", "===", "Global`dtRM"}], ",", 
             RowBox[{"GMtr", "[", 
              RowBox[{
              "i1", ",", "i2", ",", "fields", ",", "regulatorprops", ",", 
               "Global`dtRMMA", ",", "trindex"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", "x", "]"}], "===", "Global`GL"}], ",", 
               RowBox[{"GLtr", "[", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "i2", ",", 
                 RowBox[{"Head", "[", 
                  RowBox[{"x", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "fields", ",", 
                 "fullprops", ",", "Global`GMMA", ",", "trindex"}], "]"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Head", "[", "x", "]"}], "===", "Global`GR"}], ",", 
                 
                 RowBox[{"GRtr", "[", 
                  RowBox[{"i1", ",", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"Head", "[", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "fields", ",",
                    "fullprops", ",", "Global`GMMA", ",", "trindex"}], "]"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"x", "===", "Global`etaM"}], ",", 
                   RowBox[{"etaM", "[", 
                    RowBox[{"bosons", ",", "fields"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"GammaMtr", "[", 
                    RowBox[{
                    RowBox[{"List", "@@", "x"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i1", ",", "i2"}], "}"}], ",", 
                    "interactionscount", ",", "fields", ",", "dualfields", 
                    ",", "trindex"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
            "]"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "res", "]"}], ";"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6894572022132883`*^9, 3.689457262799975*^9}, {
   3.689457344172985*^9, 3.689457398495253*^9}, {3.6894574671023827`*^9, 
   3.689457486586772*^9}, {3.689457651768725*^9, 3.689457684276649*^9}, {
   3.6894577630517*^9, 3.6894577880373163`*^9}, {3.689457941446288*^9, 
   3.68945798444258*^9}, {3.689520367372053*^9, 3.689520400485292*^9}, {
   3.689520614140429*^9, 3.6895206195302353`*^9}, {3.689521867788978*^9, 
   3.689521869264017*^9}, {3.6895293906713543`*^9, 3.6895294305491867`*^9}, {
   3.689530329562376*^9, 3.689530378970985*^9}, {3.689530448124577*^9, 
   3.689530448498461*^9}, {3.689530547196093*^9, 3.689530613004586*^9}, {
   3.6895389668869534`*^9, 3.6895389786509333`*^9}, {3.6895396653658953`*^9, 
   3.6895396708574657`*^9}, 3.689621041259495*^9, {3.689975501805731*^9, 
   3.689975502369318*^9}, {3.690050300631228*^9, 3.690050301344637*^9}, {
   3.690215588836356*^9, 3.690215589714621*^9}, 3.690219389295952*^9, 
   3.690222282348721*^9, {3.690222430582659*^9, 3.6902224600982847`*^9}, {
   3.69022258205972*^9, 3.690222586884918*^9}, {3.6902227331432753`*^9, 
   3.690222733601749*^9}, {3.691836413925867*^9, 3.691836518496962*^9}, {
   3.691841100703649*^9, 3.691841105298827*^9}, 3.6918412599318657`*^9, {
   3.691944720137642*^9, 3.6919447418002377`*^9}, 3.691944791699745*^9, {
   3.691944862302951*^9, 3.691944895379121*^9}, {3.691945000290132*^9, 
   3.6919450079100943`*^9}, {3.691946581981811*^9, 3.691946628456023*^9}, {
   3.6919466630392427`*^9, 3.691946675027582*^9}, 3.691946718538251*^9, {
   3.691946836174765*^9, 3.691946877857709*^9}, {3.691947183807917*^9, 
   3.691947188634753*^9}, {3.691947344437091*^9, 3.691947357443589*^9}, {
   3.691947762280127*^9, 3.691947774958153*^9}, {3.691948131021817*^9, 
   3.691948131459325*^9}, {3.691948190132927*^9, 3.6919481950067863`*^9}, {
   3.691948266711739*^9, 3.691948287609111*^9}, {3.69194847790874*^9, 
   3.691948481957362*^9}, {3.691949365263528*^9, 3.691949365748579*^9}, 
   3.693945169476432*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"toTrace", "[", 
    RowBox[{
    "x_", ",", "fields_", ",", "dualfields_", ",", "bosons_", ",", 
     "defaultprops_", ",", "fullprops_", ",", "interactionscount_"}], "]"}], ":=", 
   RowBox[{"sortTrace", "[", 
    RowBox[{"toTraceinternal", "[", 
     RowBox[{
      RowBox[{"List", "@@", "x"}], ",", "fields", ",", "dualfields", ",", 
      "bosons", ",", "defaultprops", ",", "fullprops", ",", 
      "interactionscount"}], "]"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689522609372788*^9, 3.689522655066626*^9}, {
   3.689522690904826*^9, 3.689522725419039*^9}, 3.689526150755658*^9, {
   3.689528116710671*^9, 3.6895281614076433`*^9}, 3.6895288962429657`*^9, {
   3.689529713328043*^9, 3.689529746869628*^9}, {3.689529782430728*^9, 
   3.689529799412875*^9}, {3.689530090597849*^9, 3.689530091611973*^9}, 
   3.689530133314365*^9, {3.689530698427579*^9, 3.689530740819112*^9}, {
   3.689539070063949*^9, 3.689539078169158*^9}, {3.689621079895406*^9, 
   3.6896210890734386`*^9}, {3.69194924965238*^9, 3.691949252638824*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"indexlist", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"binarylst", ",", "lst"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"binarylst", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "===", "Global`etaM"}], "||", 
             RowBox[{"NumberQ", "[", "#", "]"}]}], ",", "0", ",", "1"}], 
           "]"}], "&"}], "/@", "x"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lst", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Plus", "@@", 
           RowBox[{"Drop", "[", 
            RowBox[{"binarylst", ",", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "[", "binarylst", "]"}], "-", "i"}], 
               ")"}]}]}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "binarylst", "]"}]}], "}"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lst", "[", 
       RowBox[{"[", 
        RowBox[{"Max", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"binarylst", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "=", 
      "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<ix\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", "lst"}], 
      "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689523033178475*^9, 3.6895230414440117`*^9}, {
   3.689523082954257*^9, 3.6895230850600567`*^9}, {3.689523136594502*^9, 
   3.689523226860649*^9}, {3.6895232774462557`*^9, 3.689523323015283*^9}, {
   3.6895234482152576`*^9, 3.689523532051755*^9}, {3.689523630867638*^9, 
   3.689523638190987*^9}, 3.689523818902103*^9, {3.689524939559145*^9, 
   3.689524954995133*^9}, {3.6895254291227207`*^9, 3.6895254454983063`*^9}, {
   3.689525493927984*^9, 3.6895255476320763`*^9}, {3.689525592275238*^9, 
   3.689525742164238*^9}, {3.689525798567398*^9, 3.689525828548073*^9}, {
   3.689525927798348*^9, 3.689525928279509*^9}, {3.689526079013483*^9, 
   3.68952607925821*^9}, {3.689526370737465*^9, 3.6895264138689203`*^9}, {
   3.689526446524995*^9, 3.689526547538639*^9}, {3.6895265863628817`*^9, 
   3.6895266016771584`*^9}, {3.6895266551904182`*^9, 3.689526760083202*^9}, {
   3.6895269043448257`*^9, 3.689526912631754*^9}, {3.6895270120045633`*^9, 
   3.6895270650298758`*^9}, {3.6895271876123857`*^9, 3.689527296093161*^9}, {
   3.6895273337013597`*^9, 3.689527334001975*^9}, {3.689527484165126*^9, 
   3.689527484757193*^9}, {3.689527551824271*^9, 3.689527555558859*^9}, {
   3.6895276532305717`*^9, 3.689527653590127*^9}, {3.689527711554887*^9, 
   3.689527757085019*^9}, {3.689527815637038*^9, 3.689527830218629*^9}, {
   3.689527911789096*^9, 3.689527915313135*^9}, {3.689529487477345*^9, 
   3.6895294944395123`*^9}, {3.689622719506031*^9, 3.689622721344089*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"toTraceinternal", "[", 
   RowBox[{
   "x_", ",", "fields_", ",", "dualfields_", ",", "bosons_", ",", 
    "defaultprops_", ",", "fullprops_", ",", "interactionscount_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"indlist", ",", "product"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indlist", "=", 
      RowBox[{"indexlist", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"product", "=", 
      RowBox[{
       RowBox[{"Dot", "@@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"toMatrix", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"indlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"indlist", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "i", ",", "fields", 
            ",", "dualfields", ",", "bosons", ",", "defaultprops", ",", 
            "fullprops", ",", "interactionscount"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}], "//.", 
       RowBox[{
        RowBox[{"Dot", "[", 
         RowBox[{"a_", ",", "b_"}], "]"}], "\[Rule]", 
        RowBox[{"a", "*", "b"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "product", "]"}], "===", "List"}], ",", 
       RowBox[{"Expand", "[", 
        RowBox[{"Tr", "[", "product", "]"}], "]"}], ",", 
       RowBox[{"Expand", "[", "product", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689458007413126*^9, 3.689458359548333*^9}, {
   3.68952042415204*^9, 3.689520424533434*^9}, {3.68952054433687*^9, 
   3.68952055065831*^9}, {3.689522602944807*^9, 3.6895226041129637`*^9}, {
   3.689523597788755*^9, 3.6895236240064907`*^9}, {3.689523692150639*^9, 
   3.689523746842174*^9}, {3.689523836845933*^9, 3.689523849191082*^9}, {
   3.6895238823579483`*^9, 3.68952396141425*^9}, {3.6895240070071373`*^9, 
   3.689524008493952*^9}, {3.6895243127576942`*^9, 3.689524313341428*^9}, {
   3.689524355693101*^9, 3.689524356810246*^9}, {3.68952444629113*^9, 
   3.689524451061788*^9}, {3.6895245009838467`*^9, 3.689524504601873*^9}, {
   3.689524629660124*^9, 3.689524634412778*^9}, {3.689524682175351*^9, 
   3.6895247348253727`*^9}, {3.689524779830179*^9, 3.6895247920188847`*^9}, {
   3.689525953251854*^9, 3.6895259669764233`*^9}, {3.689526000893684*^9, 
   3.689526006878875*^9}, {3.6895279033518133`*^9, 3.6895279037965813`*^9}, {
   3.689530039169504*^9, 3.689530043599646*^9}, {3.6895306565219173`*^9, 
   3.6895306871224422`*^9}, {3.689530805594511*^9, 3.689530805966069*^9}, {
   3.689600073600937*^9, 3.6896000812380466`*^9}, {3.68960548871868*^9, 
   3.68960549232084*^9}, 3.6896055281350803`*^9, {3.689605603374823*^9, 
   3.689605616064024*^9}, {3.689606031523157*^9, 3.689606032183673*^9}, 
   3.689621079926675*^9, 3.6896211759482737`*^9, {3.690125570566333*^9, 
   3.6901255745339212`*^9}, {3.690125651323409*^9, 3.690125671433406*^9}, {
   3.690125832997375*^9, 3.690125860313923*^9}, {3.6901262605817223`*^9, 
   3.690126275865641*^9}, {3.690219754608694*^9, 3.690219778149436*^9}, {
   3.690222294789625*^9, 3.690222295458358*^9}, {3.6919500902792873`*^9, 
   3.691950141188525*^9}, {3.69195020131481*^9, 3.6919502500124903`*^9}, {
   3.691950803810088*^9, 3.6919508181579313`*^9}, {3.6932734406023293`*^9, 
   3.693273445727902*^9}, {3.693274144469204*^9, 3.6932741931669903`*^9}, {
   3.6932746277282343`*^9, 3.69327462820502*^9}, 3.6932750265000563`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sortTrace", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "x", "]"}], "===", "Plus"}], ",", 
     RowBox[{"Plus", "@@", 
      RowBox[{"(", 
       RowBox[{"sortTraceinternal", "/@", "x"}], ")"}]}], ",", 
     RowBox[{"sortTraceinternal", "[", "x", "]"}]}], "]"}]}], ";"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.6895223225845118`*^9, 3.689522412386549*^9}, {
  3.689599971505197*^9, 3.689599982360104*^9}, {3.6896046184931*^9, 
  3.689604621095722*^9}, {3.689621089050333*^9, 3.689621089052265*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sortTraceinternal", "[", "x_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "\[Equal]", "0"}], ",", 
        RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TrMMA", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NumericQ", "[", "#", "]"}], ",", "#", ",", 
            RowBox[{
             RowBox[{"Head", "[", "#", "]"}], "@@", 
             RowBox[{"Drop", "[", 
              RowBox[{
               RowBox[{"List", "@@", "#"}], ",", "1"}], "]"}]}]}], "]"}], 
          "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Sort", "[", 
           RowBox[{
            RowBox[{"List", "@@", "x"}], ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"NumericQ", "[", "#1", "]"}], "||", 
                RowBox[{"NumericQ", "[", "#2", "]"}]}], ",", "True", ",", 
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "&"}]}], "]"}], 
          ")"}]}], ")"}]}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689520455667589*^9, 3.689520518024089*^9}, 
   3.6895218975677223`*^9, {3.68952231872033*^9, 3.689522319472863*^9}, {
   3.689522376958185*^9, 3.6895223814112663`*^9}, 3.6895224484921627`*^9, {
   3.689522549591206*^9, 3.689522574685988*^9}, {3.689599853789818*^9, 
   3.689599863345298*^9}, {3.6895998998977737`*^9, 3.6895999015040407`*^9}, {
   3.689599962171495*^9, 3.689599965899426*^9}, {3.689604629686699*^9, 
   3.6896046436215467`*^9}, {3.6896047011345673`*^9, 3.689604760839286*^9}, {
   3.68960489005554*^9, 3.689604890507794*^9}, 3.689621089061461*^9, {
   3.6901253225055027`*^9, 3.6901253285320263`*^9}, {3.690125578039723*^9, 
   3.690125579572673*^9}, {3.690219656345348*^9, 3.690219659178185*^9}, 
   3.690219708453471*^9, {3.691949351697538*^9, 3.6919493566156397`*^9}, {
   3.691949733442967*^9, 3.691949735938319*^9}, {3.691949814326418*^9, 
   3.6919498218658*^9}, {3.6919498530430393`*^9, 3.691949853517543*^9}, {
   3.6919498966374083`*^9, 3.691949896749463*^9}, 3.6919499498217*^9, {
   3.6919505799991207`*^9, 3.691950586130533*^9}, {3.691950869803638*^9, 
   3.691950870336218*^9}, {3.693273617288615*^9, 3.693273638232609*^9}, {
   3.693273909260191*^9, 3.693273909961445*^9}, {3.693274561536149*^9, 
   3.693274617739586*^9}, {3.693275042537532*^9, 3.693275043365109*^9}, {
   3.693948266129368*^9, 3.6939482849155207`*^9}, {3.6939486607015247`*^9, 
   3.693948661305537*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["DSE Action and first derivative", "Subsection",
 CellChangeTimes->{{3.692012635309403*^9, 3.692012652703148*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"combfactor", "[", "interactionscount_", "]"}], ":=", 
  RowBox[{"Times", "@@", 
   RowBox[{"Factorial", "/@", "interactionscount"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.69199821401243*^9, 3.691998232824091*^9}, {
  3.691998283207011*^9, 3.6919983522770977`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"actionfrominteractionsinternal", "[", 
   RowBox[{"interactioncount_", ",", "fields_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cumulated", ",", "lst"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cumulated", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"fields", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"interactioncount", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"interactioncount", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "i"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "interactioncount", "]"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lst", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "/@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ToExpression", "[", 
              RowBox[{"\"\<iy\>\"", "<>", 
               RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], ")"}], 
         "&"}], "/@", "cumulated"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"TrMMA", "@@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Gamma0", "@@", "lst"}], "}"}], ",", "lst"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"actionfrominteractions", "[", 
   RowBox[{"interactionscount_", ",", "fields_"}], "]"}], ":=", 
  RowBox[{"Plus", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"combfactor", "[", "#", "]"}]}], "*", 
       RowBox[{"actionfrominteractionsinternal", "[", 
        RowBox[{"#", ",", "fields"}], "]"}]}], "&"}], "/@", 
     "interactionscount"}], ")"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.69200452198777*^9, 3.6920046151897583`*^9}, {
   3.692005227937652*^9, 3.692005237428503*^9}, {3.692005271582635*^9, 
   3.6920053112737417`*^9}, {3.692005355646143*^9, 3.692005441001265*^9}, {
   3.692005486933947*^9, 3.692005588764257*^9}, {3.6920056696756907`*^9, 
   3.692005679664555*^9}, {3.6920057585687637`*^9, 3.69200575908706*^9}, {
   3.692005791148912*^9, 3.692005808613471*^9}, {3.692005901041212*^9, 
   3.69200594773514*^9}, {3.692008314583826*^9, 3.692008364224958*^9}, {
   3.692008418258376*^9, 3.6920084199600363`*^9}, 3.692012725204822*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sign", "[", 
   RowBox[{"a_", ",", "fermions_"}], "]"}], ":=", 
  RowBox[{"Power", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    RowBox[{"Plus", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{"a", ",", "#"}], "]"}], "&"}], "/@", "fermions"}], ")"}]}]}],
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{"singlederivativeinternal", "[", 
   RowBox[{"expr_", ",", "field_", ",", "i_", ",", "fermions_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "allfields", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"allfields", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"List", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", "expr", ")"}], "/.", 
             RowBox[{
              RowBox[{"Times", "[", 
               RowBox[{"a__", ",", 
                RowBox[{"TrMMA", "[", "b__", "]"}]}], "]"}], "\[Rule]", 
              RowBox[{"TrMMA", "[", "b", "]"}]}]}], ")"}], "/.", 
           RowBox[{
            RowBox[{"TrMMA", "[", "b__", "]"}], "\[Rule]", "b"}]}], ")"}]}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "#", "]"}], "===", "field"}], "&"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "allfields", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"fermions", ",", "field"}], "]"}], "\[Equal]", "True"}], ",", 
       RowBox[{
        RowBox[{"expr", "//.", 
         RowBox[{
          RowBox[{"TrMMA", "[", 
           RowBox[{
            RowBox[{"Gamma0", "[", "c__", "]"}], ",", "a___", ",", 
            RowBox[{"allfields", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "b___"}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"TrMMA", "[", 
            RowBox[{
             RowBox[{"Gamma0", "[", "c", "]"}], ",", "a", ",", "b"}], "]"}], 
           "*", 
           RowBox[{"sign", "[", 
            RowBox[{
             RowBox[{"Head", "/@", 
              RowBox[{"(", 
               RowBox[{"List", "@", "a"}], ")"}]}], ",", "fermions"}], "]"}], 
           "*", 
           RowBox[{"Length", "[", "allfields", "]"}]}]}]}], "/.", 
        RowBox[{
         RowBox[{"allfields", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"allfields", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", "i", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"expr", "/.", 
         RowBox[{
          RowBox[{"TrMMA", "[", 
           RowBox[{"a___", ",", 
            RowBox[{"allfields", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "b___"}], "]"}], "\[Rule]", 
          
          RowBox[{
           RowBox[{"TrMMA", "[", 
            RowBox[{"a", ",", "b"}], "]"}], "*", 
           RowBox[{"Length", "[", "allfields", "]"}]}]}]}], "/.", 
        RowBox[{
         RowBox[{"allfields", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"allfields", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", "i", "]"}]}]}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"singlederivative", "[", 
   RowBox[{"expr_", ",", "field_", ",", "i_", ",", "fermions_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "expr", "]"}], "===", "Plus"}], ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"singlederivativeinternal", "[", 
        RowBox[{"#", ",", "field", ",", "i", ",", "fermions"}], "]"}], "&"}], 
      "/@", "expr"}], ")"}], ",", 
    RowBox[{"singlederivativeinternal", "[", 
     RowBox[{"expr", ",", "field", ",", "i", ",", "fermions"}], "]"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6920075239679413`*^9, 3.692007590267694*^9}, {
   3.692011136332995*^9, 3.692011143056263*^9}, {3.692011377550663*^9, 
   3.692011416345402*^9}, {3.692011486732629*^9, 3.692011497592174*^9}, {
   3.6920117947486277`*^9, 3.692011797548161*^9}, {3.692011902214114*^9, 
   3.692011904438559*^9}, 3.692011946606916*^9, 3.6920127442052107`*^9, {
   3.692013394463225*^9, 3.692013421329507*^9}, {3.692352568150872*^9, 
   3.69235257340412*^9}, {3.692804417078102*^9, 3.6928044176264143`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["DoFun/ERGE Conversion", "Subsection",
 CellChangeTimes->{{3.690072027307041*^9, 3.690072044601591*^9}, {
  3.697483181555676*^9, 3.697483182382779*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"toDoFun", "[", "x__", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Head", "[", "#", "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], "/@", "x"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6894466721317167`*^9, 3.689446674106827*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"convertV", "[", 
    RowBox[{"expr_", ",", "fermions_", ",", "afermions_", ",", "bosons_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"derivs", ",", "nfermions", ",", "nafermions", ",", "fields"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"derivs", "=", 
       RowBox[{"First", "/@", 
        RowBox[{"List", "@@", "expr"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nfermions", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{"derivs", ",", "#"}], "]"}], "&"}], "/@", "fermions"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nafermions", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{"derivs", ",", "#"}], "]"}], "&"}], "/@", "afermions"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"0", "*", "nafermions", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"nafermions", "-", "1"}], ")"}], "/", "2"}]}], ")"}]}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"reorderfermionic", "\[Equal]", "False"}], ",", "expr", ",", 
          RowBox[{"reorderFermionicVertex", "[", 
           RowBox[{"expr", ",", "fermions", ",", "afermions", ",", "bosons"}],
            "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.690047027599183*^9, 3.690047322500236*^9}, {
   3.690047372327076*^9, 3.6900473944475107`*^9}, {3.690048128494083*^9, 
   3.690048139604713*^9}, {3.690048702225465*^9, 3.690048702404098*^9}, 
   3.690048804390294*^9, {3.690061460145546*^9, 3.690061462368203*^9}, {
   3.690123325866619*^9, 3.6901233265496683`*^9}, {3.690129537013648*^9, 
   3.690129539362714*^9}, {3.690165232002715*^9, 3.69016523217529*^9}, {
   3.6903246299177017`*^9, 3.690324631973235*^9}, {3.690324720673081*^9, 
   3.69032481802941*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "additional", " ", "sign", " ", "for", " ", "Gamma0", " ", "with", " ", 
    "two", " ", "entries", " ", "here", " ", "to", " ", "compensate", " ", 
    "the", " ", "DoFun"}], "-", "vertex", "-", "sign"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6920951141853437`*^9, 3.692095123626669*^9}, {
  3.692347136720786*^9, 3.692347156356917*^9}, {3.6935195834767036`*^9, 
  3.6935196091204367`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"convertToDoFun", "[", 
    RowBox[{
    "y_", ",", "fermions_", ",", "afermions_", ",", "bosons_", ",", 
     "extder_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "extder", "]"}], ">", "2"}], ",", 
              RowBox[{"-", "1"}], ",", "1"}], "]"}], "*", "y"}], "/.", 
           RowBox[{
            RowBox[{"Global`G", "[", "x__", "]"}], ":>", 
            RowBox[{"DoFun`DoDSERGE`P", "@@", 
             RowBox[{"toDoFun", "[", 
              RowBox[{"{", "x", "}"}], "]"}]}]}]}], "/.", 
          RowBox[{
           RowBox[{"Global`dtR", "[", "x__", "]"}], "\[RuleDelayed]", 
           RowBox[{"DoFun`DoDSERGE`dR", "@@", 
            RowBox[{"toDoFun", "[", 
             RowBox[{"{", "x", "}"}], "]"}]}]}]}], "/.", 
         RowBox[{
          RowBox[{"Global`Gamman", "[", "x__", "]"}], "\[RuleDelayed]", 
          RowBox[{"convertV", "[", 
           RowBox[{
            RowBox[{"DoFun`DoDSERGE`V", "@@", 
             RowBox[{"toDoFun", "[", 
              RowBox[{"{", "x", "}"}], "]"}]}], ",", "fermions", ",", 
            "afermions", ",", "bosons"}], "]"}]}]}], "/.", 
        RowBox[{"Global`Op", "->", "DoFun`DoDSERGE`op"}]}], "//.", 
       RowBox[{
        RowBox[{"DoFun`DoDSERGE`op", "[", 
         RowBox[{"x1___", ",", 
          RowBox[{"-", 
           RowBox[{"DoFun`DoDSERGE`V", "[", "x2__", "]"}]}], ",", "x3___"}], 
         "]"}], "\[Rule]", 
        RowBox[{"-", 
         RowBox[{"DoFun`DoDSERGE`op", "[", 
          RowBox[{"x1", ",", 
           RowBox[{"DoFun`DoDSERGE`V", "[", "x2", "]"}], ",", "x3"}], 
          "]"}]}]}]}], "/.", 
      RowBox[{
       RowBox[{"Global`Gamma0n", "[", 
        RowBox[{"x1_", ",", "x2_"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"-", 
        RowBox[{"convertV", "[", 
         RowBox[{
          RowBox[{"DoFun`DoDSERGE`S", "@@", 
           RowBox[{"toDoFun", "[", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}], "]"}]}], ",", "fermions", ",", 
          "afermions", ",", "bosons"}], "]"}]}]}]}], "/.", 
     RowBox[{
      RowBox[{"Global`Gamma0n", "[", "x__", "]"}], "\[RuleDelayed]", 
      RowBox[{"convertV", "[", 
       RowBox[{
        RowBox[{"DoFun`DoDSERGE`S", "@@", 
         RowBox[{"toDoFun", "[", 
          RowBox[{"{", "x", "}"}], "]"}]}], ",", "fermions", ",", "afermions",
         ",", "bosons"}], "]"}]}]}], "//.", 
    RowBox[{
     RowBox[{"DoFun`DoDSERGE`op", "[", 
      RowBox[{"x1___", ",", 
       RowBox[{"-", 
        RowBox[{"DoFun`DoDSERGE`S", "[", "x2__", "]"}]}], ",", "x3___"}], 
      "]"}], "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"DoFun`DoDSERGE`op", "[", 
       RowBox[{"x1", ",", 
        RowBox[{"DoFun`DoDSERGE`S", "[", "x2", "]"}], ",", "x3"}], 
       "]"}]}]}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689540920122713*^9, 3.689540963205761*^9}, {
   3.689556608541189*^9, 3.6895566619451303`*^9}, {3.689558821284218*^9, 
   3.689558825779818*^9}, {3.6895594857342663`*^9, 3.689559505971624*^9}, {
   3.689559594527115*^9, 3.689559664191596*^9}, {3.689621103112892*^9, 
   3.689621106354171*^9}, {3.6897167809936743`*^9, 3.689716781236024*^9}, {
   3.6899740880587997`*^9, 3.68997408825314*^9}, {3.6899744495559673`*^9, 
   3.689974498886675*^9}, {3.690048707582614*^9, 3.690048717200695*^9}, {
   3.690048765115996*^9, 3.690048798174944*^9}, {3.69004882875047*^9, 
   3.690048876316571*^9}, 3.6900490341157913`*^9, {3.6900624760575647`*^9, 
   3.690062486724763*^9}, {3.690123152244844*^9, 3.690123166889539*^9}, {
   3.6901236761740837`*^9, 3.690123712522928*^9}, {3.6903246410795918`*^9, 
   3.690324650478806*^9}, {3.6920942752661467`*^9, 3.692094320563488*^9}, 
   3.69209511029984*^9, {3.6923467897409697`*^9, 3.692346816659663*^9}, {
   3.692346945205387*^9, 3.692346949128769*^9}, 3.6923469981225348`*^9, {
   3.692347066511561*^9, 3.6923471014549437`*^9}, 3.6923471651309834`*^9, 
   3.692804632310158*^9, 3.693275524084786*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertToERGE", "[", "y_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "/.", 
      RowBox[{
       RowBox[{"Global`G", "[", "x__", "]"}], ":>", 
       RowBox[{"Global`G", "@@", 
        RowBox[{"toDoFun", "[", 
         RowBox[{"{", "x", "}"}], "]"}]}]}]}], "/.", 
     RowBox[{
      RowBox[{"Global`Gamman", "[", "x__", "]"}], ":>", 
      RowBox[{"Global`Gamman", "@@", 
       RowBox[{"toDoFun", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}]}]}], "/.", 
    RowBox[{
     RowBox[{"Global`Gamma0n", "[", "x__", "]"}], ":>", 
     RowBox[{"Global`Gamma0n", "@@", 
      RowBox[{"toDoFun", "[", 
       RowBox[{"{", "x", "}"}], "]"}]}]}]}], "/.", 
   RowBox[{
    RowBox[{"Global`dtR", "[", "x__", "]"}], ":>", 
    RowBox[{"Global`dtR", "@@", 
     RowBox[{"toDoFun", "[", 
      RowBox[{"{", "x", "}"}], "]"}]}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.697483185376402*^9, 3.697483290638783*^9}, {
  3.6974835810845346`*^9, 3.6974835902723827`*^9}, {3.69748409042533*^9, 
  3.6974841009307537`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"convertToERGEDerivatives", "[", 
    RowBox[{"expr_", ",", "fermions_", ",", "afermions_", ",", "bosons_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "exprcheck", ",", "derivsorted", ",", "nafermions", ",", "nfermions", 
       ",", "signafermions", ",", "signfermions", ",", "fermionlst"}], "}"}], 
     " ", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "leftmost", " ", "first", " ", "in", " ", "DoFun", " ", 
        "conventions"}], ";", " ", 
       RowBox[{"assumes", " ", "sorting"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"exprcheck", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"expr", ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"fermions", ",", "afermions"}], "]"}], ",", 
            RowBox[{"Head", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"debuggingMode", "\[Equal]", "False"}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"SplitBy", "[", 
              RowBox[{"exprcheck", ",", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"fermions", ",", 
                  RowBox[{"Head", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}], 
             "]"}], ">", "2"}], "||", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"SplitBy", "[", 
              RowBox[{"exprcheck", ",", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"afermions", ",", 
                  RowBox[{"Head", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}], 
             "]"}], ">", "2"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"doERGE", "::", "sortfields"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"derivsorted", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", "expr", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"fermions", ",", 
             RowBox[{"Head", "[", "#", "]"}]}], "]"}], "&"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nafermions", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"Head", "/@", "derivsorted"}], ",", "#"}], "]"}], "&"}], 
          "/@", "afermions"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nfermions", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"Head", "/@", "derivsorted"}], ",", "#"}], "]"}], "&"}], 
          "/@", "fermions"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "converting", " ", "fermionic", " ", "right", " ", "derivatives", " ",
          "to", " ", "left", " ", "derivatives", " ", "gives", " ", "sign", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"nafermions", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"nafermions", "-", "1"}], ")"}], "/", "2"}]}], 
           ")"}]}]}], ")"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"signfermions", "=", 
       RowBox[{"Power", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], ",", 
         RowBox[{"nfermions", "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"nfermions", "-", "1"}], ")"}], "/", "2"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "additional", " ", "signs", " ", "for", " ", "anticommuting", " ", 
        "across", " ", "potentially", " ", "fermionic", " ", "expression", 
        " ", "to", " ", "the", " ", "left"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"fermionlst", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"afermions", ",", "#"}], "]"}], ",", "1", ",", "0"}], 
             "]"}], "&"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Head", "/@", "derivsorted"}], ")"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "derivsorted", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"signafermions", "=", "1"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Power", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"Plus", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}], 
               RowBox[{"(", 
                RowBox[{"nafermions", "-", 
                 RowBox[{"(", 
                  RowBox[{"Plus", "@@", "#"}], ")"}]}], ")"}]}], "&"}], "/@", 
             "fermionlst"}], ")"}]}]}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"returns", " ", 
        RowBox[{"{", 
         RowBox[{"Derivatives", ",", "sign"}], "}"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"derivsorted", ",", 
         RowBox[{"signfermions", "*", "signafermions"}]}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwd030s1AEcBvBztKQl8zabyxKKy4iMaaYut8NVsvNSaCTyct1wRF7OSyXM
nJdyp00tr8dOQhjlOnW7Oy8rSo1jTeUU6ybzsuLY9Hvuj+8+/z57nn1tb6Sy
bpJJJJIvcbD1hXypskBDM+mVr0BS+fQaLPMu0cJ01wByFWHt7pH9kBwlCEst
0tDEqrEYmGIg4UNr/aVqOOzk2QNZq2uvocfIpl0a4dFLHAdIl3RTYROr4iRc
t5K6wYsO/e4wwbmZDsXBtUy4JP50GU5MssMhtSYzBno+bYmDuY6RvVBitNMP
H/79/RbGrH6WQWUdWwW16oGvMFyx/AMyLbgL8GWTYh2mmCZswFN6rYNcwoic
WAlslyXKYG792Ac41eE1BZn5ZQvQeGZ+GwYZcrVQGKg+nE64nNdpBvukz6xh
UgbDBopa3Zyg8aKECuOl7S4whT6g83okPS0DfYkWubAorqMlk7DgzJNhmLsj
HYH35tLGofLa5AycI91WQTsXtgZKA0tXYckV33+Qk2i6B0WsAf0sQh7luwEs
nlEaQhl9+iC0H0gzhdGU82YwkSGwhu1tb2yhsu2sK2QUzrjBiY9iL3g3eVZn
mIDrA312PWmQyfMJhOS5pguQ88iPBSXprBAYLA+KgJS92ig4qB6KhSanm+Og
sNM5GVbRVanQZr6hEG61dOnkKYRD8EtYm859ovqQbOQ7pAyHK4xRLjQXJGXD
EzmFD2BogKMQUsx+dkO9YXYPrD5W15xDaKW92gp/NYr6YKSN4BWMt5wdhe7J
/AloP/+8nEfoMHunBjLL/QX5hNtJU0J4a8H3nRC7jZjIYXRN5TgM9c9/D1kb
f+IaCB+rKuJhlsWWHPI9QqbhfbbRN2ieR1XDruPTho34j2LGAWjB17dUlGpo
Kr8mnedEVm5ws4/jDf8DdzAGKQ==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"selectFields", "[", 
    RowBox[{"l_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Last", "/@", 
    RowBox[{"Select", "[", 
     RowBox[{"l", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "x"}], "&"}]}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"signperm", "[", 
     RowBox[{"test_", ",", "test2_"}], "]"}], ":=", 
    RowBox[{"Power", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"Plus", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"#", "+", "1"}], ",", "2"}], "]"}], "&"}], "/@", 
         RowBox[{"Length", "/@", 
          RowBox[{
           RowBox[{"FindPermutation", "[", 
            RowBox[{"test", ",", "test2"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"isint", "[", "x_", "]"}], ":=", 
    RowBox[{"StringMatchQ", "[", 
     RowBox[{
      RowBox[{"ToString", "[", "x", "]"}], ",", "\"\<iint*\>\""}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"afermions", ":", " ", 
    RowBox[{
    "iext", " ", "first", " ", "ascending", " ", "then", " ", "iint", " ", 
     "ascending", "\[IndentingNewLine]", "fermions"}], ":", " ", 
    RowBox[{
    "iint", " ", "ascending", " ", "first", " ", "then", " ", "iext", " ", 
     "ascending"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compareint", "[", 
     RowBox[{"x1_", ",", "x2_", ",", "fermions_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"isint", "[", "x1", "]"}], "&&", 
       RowBox[{"isint", "[", "x2", "]"}]}], ",", 
      RowBox[{"OrderedQ", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "x2"}], "}"}], "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"isint", "[", "x1", "]"}], "&&", 
         RowBox[{"Not", "[", 
          RowBox[{"isint", "[", "x2", "]"}], "]"}]}], ",", "fermions", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"isint", "[", "x2", "]"}], "&&", 
           RowBox[{"Not", "[", 
            RowBox[{"isint", "[", "x1", "]"}], "]"}]}], ",", 
          RowBox[{"Not", "[", "fermions", "]"}], ",", 
          RowBox[{"OrderedQ", "[", 
           RowBox[{"{", 
            RowBox[{"x1", ",", "x2"}], "}"}], "]"}]}], "]"}]}], "]"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "order", " ", "afermions", " ", "and", " ", "fermions", " ", "according", 
    " ", "to", " ", "compareint"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"reorderFermionicVertex", "[", 
   RowBox[{"v_", ",", "fermions_", ",", "afermions_", ",", "bosons_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vlist", ",", "fields", ",", "fieldssorted", ",", "indices", ",", 
      "indices2", ",", "indicesrev", ",", "sign"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vlist", "=", 
      RowBox[{"List", "@@", "v"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"fields", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"First", "/@", "vlist"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"(*", 
      RowBox[{"afermions", " ", "in", " ", "reverse", " ", "order"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"fieldssorted", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Intersection", "[", 
         RowBox[{"fields", ",", "bosons"}], "]"}], ",", 
        RowBox[{"Reverse", "[", 
         RowBox[{"Intersection", "[", 
          RowBox[{"fields", ",", "afermions"}], "]"}], "]"}], ",", 
        RowBox[{"Intersection", "[", 
         RowBox[{"fields", ",", "fermions"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"indices", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"selectFields", "[", 
         RowBox[{"vlist", ",", "#"}], "]"}], "&"}], "/@", "fields"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"indices2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"selectFields", "[", 
         RowBox[{"vlist", ",", "#"}], "]"}], "&"}], "/@", "fieldssorted"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"indicesrev", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"bosons", ",", 
            RowBox[{"fieldssorted", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"indices2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"afermions", ",", 
              RowBox[{"fieldssorted", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Sort", "[", 
             RowBox[{
              RowBox[{"indices2", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"compareint", "[", 
                RowBox[{"#1", ",", "#2", ",", "False"}], "]"}], "&"}]}], 
             "]"}], ",", 
            RowBox[{"Sort", "[", 
             RowBox[{
              RowBox[{"indices2", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"compareint", "[", 
                RowBox[{"#1", ",", "#2", ",", "True"}], "]"}], "&"}]}], 
             "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "indices2", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"signperm", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "indices", "]"}], ",", 
        RowBox[{"Flatten", "[", "indicesrev", "]"}]}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Head", "[", "v", "]"}], "@@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"fieldssorted", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "}"}], "&"}], "/@", 
             RowBox[{"indicesrev", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "fields", "]"}]}], "}"}]}], "]"}], ",", 
          "1"}], "]"}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6903245442258167`*^9, {3.690325041806714*^9, 3.6903250661003323`*^9}, {
   3.690325123060302*^9, 3.6903251242318907`*^9}, {3.690380715948125*^9, 
   3.690380763584643*^9}, {3.6903810268326674`*^9, 3.6903810347485847`*^9}, {
   3.690381456930545*^9, 3.690381459181798*^9}, {3.690381802819409*^9, 
   3.690381804625265*^9}, {3.6903818525725107`*^9, 3.6903818576641417`*^9}, {
   3.6903819876352243`*^9, 3.690381991102269*^9}, {3.69038202202046*^9, 
   3.690382186135086*^9}, {3.690382273735691*^9, 3.69038232033927*^9}, {
   3.6903823915987797`*^9, 3.6903823929548492`*^9}, {3.690382440607993*^9, 
   3.6903825091277847`*^9}, {3.690862769410687*^9, 3.690862798411598*^9}, {
   3.690862874053393*^9, 3.690862927225254*^9}, 3.690862992969282*^9, 
   3.6908632096581507`*^9, {3.691317688130577*^9, 3.691317689746838*^9}, {
   3.691320770058777*^9, 3.691320778381983*^9}, {3.69132119628899*^9, 
   3.691321199420236*^9}, {3.691321363724037*^9, 3.691321395167149*^9}, {
   3.691321570266719*^9, 3.691321583190352*^9}, {3.691321745218493*^9, 
   3.691321783926919*^9}, {3.6939461700067244`*^9, 3.693946180517366*^9}, {
   3.693946230884924*^9, 3.6939462588117847`*^9}, {3.69394629188437*^9, 
   3.693946296515698*^9}, {3.69437435789649*^9, 3.694374359468553*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetAE", "Section",
 CellChangeTimes->{{3.696857360336986*^9, 3.696857366580738*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DefineFieldSpecificERGE", "[", "new_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "firstargs", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"firstargs", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"List", "/@", 
          RowBox[{
           RowBox[{"Flatten", "[", "new", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], "//", 
        "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "firstargs", "]"}], "\[NotEqual]", "1"}], "||", 
          RowBox[{"firstargs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "=!=", "mom"}], ",", 
        RowBox[{
        "Print", "[", 
         "\"\<ERROR: The first argument of all fields has to be momentum \
(mom).\>\"", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ERGEfieldsspecific", "=", "new"}], ";"}]}], "]"}], ";"}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.696857419432461*^9, 3.696857430137979*^9}, {
   3.696857470030163*^9, 3.696857490978366*^9}, {3.696857671132725*^9, 
   3.696857696818618*^9}, {3.696967405662188*^9, 3.6969674116014338`*^9}, {
   3.69738113896951*^9, 3.697381197630104*^9}, {3.6973812591707907`*^9, 
   3.697381262728567*^9}, {3.697381317131359*^9, 3.697381468352489*^9}, 
   3.6973815546702137`*^9, {3.697389644850813*^9, 3.6973896461519747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAEERGE", "[", 
    RowBox[{"diags_", ",", "extindices_List", ",", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SetExplicitTrue", "\[Rule]", "True"}], ",", 
        RowBox[{"DoFunInput", "\[Rule]", "True"}]}], "}"}], "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "diagstmp", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diagstmp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "diags", "]"}], "===", "Plus"}], ",", 
         RowBox[{"List", "@@", "diags"}], ",", 
         RowBox[{"{", "diags", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"getAEsinglediagram", "[", 
            RowBox[{"#", ",", "extindices", ",", "ERGEfieldsspecific", ",", 
             RowBox[{"OptionValue", "[", "SetExplicitTrue", "]"}], ",", 
             RowBox[{"OptionValue", "[", "DoFunInput", "]"}]}], "]"}], "&"}], 
          "/@", "diagstmp"}], ")"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6968575849701567`*^9, 3.696857598148818*^9}, {
   3.69685803165009*^9, 3.696858056141694*^9}, {3.696966120472496*^9, 
   3.696966172076721*^9}, {3.696966225514146*^9, 3.6969663446267147`*^9}, 
   3.696966440118312*^9, 3.6969673501804028`*^9, {3.697051285112492*^9, 
   3.6970512941646357`*^9}, {3.6970513532190237`*^9, 3.697051403853859*^9}, {
   3.6971212136445208`*^9, 3.697121219411606*^9}, {3.6971212928300047`*^9, 
   3.697121293261671*^9}, {3.6971215115094233`*^9, 3.697121512678403*^9}, 
   3.69712166727801*^9, {3.69731949910645*^9, 3.697319507936265*^9}, {
   3.697382727319435*^9, 3.697382739206642*^9}, {3.697484494005981*^9, 
   3.6974845394941463`*^9}, {3.697484663442751*^9, 3.697484698581336*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tointernal", "[", 
   RowBox[{"x_", ",", "fieldsspecific_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fieldundef", ",", "xpref"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"fieldundef", "=", 
      RowBox[{
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "===", "List"}], ",", 
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}], ",", 
         RowBox[{"Head", "/@", 
          RowBox[{"Flatten", "[", "fieldsspecific", "]"}]}]}], "]"}], "//", 
       "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "fieldundef", "]"}], ">", "0"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<ERROR: The following fields remain to be defined via \
DefineFieldsSpecificERGE:\>\"", "<>", 
          RowBox[{"ToString", "[", "fieldundef", "]"}]}], "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xpref", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Head", "[", "#", "]"}], "}"}], ",", 
             RowBox[{"List", "@@", "#"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Flatten", "[", "fieldsspecific", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "==", 
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"2", ";;", 
          RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Join", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"xpref", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "<>", 
           RowBox[{"ToString", "[", "i", "]"}], "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"x", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "xpref", "]"}]}], "}"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.696859573431538*^9, 3.696859584890197*^9}, {
   3.69685962308426*^9, 3.696859721898182*^9}, {3.696859784145401*^9, 
   3.696859788063493*^9}, 3.69686404340667*^9, {3.696864116608141*^9, 
   3.696864118028577*^9}, 3.696889055416484*^9, {3.6969667823769827`*^9, 
   3.69696678852454*^9}, {3.696966909355073*^9, 3.6969669252718353`*^9}, {
   3.696966961261908*^9, 3.6969669614316273`*^9}, {3.697069251427125*^9, 
   3.697069258790514*^9}, {3.697069311028984*^9, 3.697069311586197*^9}, {
   3.697069963071843*^9, 3.697069967047679*^9}, {3.697070113051198*^9, 
   3.697070116015634*^9}, 3.697070249350958*^9, {3.697070311838723*^9, 
   3.6970703613787193`*^9}, {3.6970703959581842`*^9, 3.697070400257337*^9}, {
   3.697070679051816*^9, 3.697070799595804*^9}, {3.697070844690567*^9, 
   3.697070889850356*^9}, {3.697070929186469*^9, 3.697070932749715*^9}, {
   3.6970709792696323`*^9, 3.697070980613161*^9}, {3.6970710320268993`*^9, 
   3.6970710754197187`*^9}, {3.697071113632442*^9, 3.697071119729068*^9}, {
   3.6970711612819033`*^9, 3.697071164541857*^9}, {3.697071199709894*^9, 
   3.697071202613703*^9}, {3.697071238207258*^9, 3.6970712702743807`*^9}, {
   3.697381569763167*^9, 3.6973815914778223`*^9}, {3.697482029535191*^9, 
   3.697482043616103*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"listtofield", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "@@", 
    RowBox[{"Drop", "[", 
     RowBox[{"x", ",", 
      RowBox[{"{", "1", "}"}]}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.696984824308243*^9, 3.696984861523271*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"replrule", "[", 
   RowBox[{"indices_", ",", " ", "indicesfull_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"indices", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"indices", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], "\[Rule]", 
       RowBox[{"listtofield", "[", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"indicesfull", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"indices", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Equal]", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "indices", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6968645678192*^9, 3.696864596678403*^9}, {
  3.696864732223817*^9, 3.696864864223452*^9}, {3.696864926729797*^9, 
  3.696864936312461*^9}, {3.696967055188602*^9, 3.6969670625687027`*^9}, {
  3.696984496846488*^9, 3.696984506575344*^9}, {3.696984881319881*^9, 
  3.696984890538618*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"removedelta", "[", 
   RowBox[{"x_", ",", "extmom_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"symb", ",", "repl", ",", "xtmp"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "x", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ";", 
     RowBox[{"(*", 
      RowBox[{"no", " ", "delta"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "==", 
        RowBox[{"delta", "[", "0", "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "]"}], ";", 
     RowBox[{"(*", 
      RowBox[{"delta", "[", "0", "]"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"symb", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"List", "@@", "#"}], "&"}], "/@", 
             RowBox[{"List", "@@", 
              RowBox[{"x", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "//", 
           "DeleteDuplicates"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], "\[Equal]", "Symbol"}], "&"}]}], 
         "]"}], ",", "extmom"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "symb", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "*", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], "]"}]}], 
      "]"}], ";", 
     RowBox[{"(*", 
      RowBox[{"no", " ", "dummy", " ", "momentum", " ", "available"}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"repl", "=", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"List", "@@", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"symb", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "/.", "repl"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6968885537717857`*^9, 3.69688855696215*^9}, {
   3.696888587555978*^9, 3.6968886297551003`*^9}, {3.696888667418975*^9, 
   3.696888692942168*^9}, 3.696888731266288*^9, {3.69707014192317*^9, 
   3.697070157956012*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAEsinglediagram", "[", 
    RowBox[{"expr_", ",", "extindices_", ",", "fieldsspecific_", ",", 
     RowBox[{"explicittrue_:", "True"}], ",", 
     RowBox[{"dofuninput_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "indices", ",", "extindicesreduced", ",", "extmomenta", ",", 
       "internalindicesreduced", ",", "indicesfull", ",", "exprexplicit", ",",
        "exprexplicitwdeltas", ",", "coeff", ",", "expr2", ",", "res", ",", 
       "intmomenta"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"deal", " ", "with", " ", "prefactors"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"dofuninput", "===", "True"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "expr", "]"}], "===", "Times"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"coeff", ",", "expr2"}], "}"}], "=", 
           RowBox[{"expr", "/.", 
            RowBox[{
             RowBox[{"Times", "[", 
              RowBox[{
               RowBox[{"a_", "/;", 
                RowBox[{"NumericQ", "[", "a", "]"}]}], ",", "b_"}], "]"}], 
             "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"a", ",", "b"}], "}"}]}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"expr2", "=", "expr"}], ";", "\[IndentingNewLine]", 
           RowBox[{"coeff", "=", "1"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"ERGE", " ", "version"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"expr2", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"expr", ",", "_Rational"}], "]"}], ",", 
            RowBox[{"Cases", "[", 
             RowBox[{"expr", ",", "_Integer"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "expr2", "]"}], ">", "1"}], ",", 
           RowBox[{
            RowBox[{
            "Print", "[", "\"\<Malformed expression in getAE.\>\"", "]"}], 
            ";", " ", 
            RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "expr2", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"coeff", "=", 
             RowBox[{"expr2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";"}], ",", 
           RowBox[{"coeff", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"expr2", "=", 
          RowBox[{"expr", "/", "coeff"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"indices", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"List", "@@", "#"}], "&"}], "/@", 
           RowBox[{"List", "@@", "expr2"}]}], ",", "1"}], "]"}], "//", 
        "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"extindicesreduced", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
        "extindices"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"extmomenta", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"List", "@@", "#"}], "&"}], "/@", 
            RowBox[{"List", "@@", 
             RowBox[{"extindices", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}], "]"}], "//", 
          "DeleteDuplicates"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "#", "]"}], "\[Equal]", "Symbol"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"internalindicesreduced", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"indices", ",", "extindicesreduced"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"indicesfull", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"extindices", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"tointernal", "[", 
            RowBox[{"#", ",", "fieldsspecific"}], "]"}], "&"}], "/@", 
          "internalindicesreduced"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exprexplicit", "=", 
       RowBox[{
        RowBox[{"Times", "@@", "expr2"}], "/.", 
        RowBox[{"replrule", "[", 
         RowBox[{"indices", ",", "indicesfull"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"exprexplicitwdeltas", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"delta", "@@", 
            RowBox[{"{", 
             RowBox[{"Plus", "@@", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}]}], "&"}], "/@", 
          RowBox[{"List", "@@", "exprexplicit"}]}], ",", 
         RowBox[{"{", "exprexplicit", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{
        RowBox[{"coeff", "*", 
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"removedelta", "[", 
             RowBox[{"#", ",", "extmomenta"}], "]"}], "&"}], ",", 
           "exprexplicitwdeltas", ",", 
           RowBox[{"Length", "[", "exprexplicitwdeltas", "]"}]}], "]"}]}], "/.", 
        RowBox[{
         RowBox[{"delta", "[", "0", "]"}], "\[Rule]", "1"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"for", " ", "dummy", " ", "momentum", " ", "replacement"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"intmomenta", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Apply", "[", 
                  RowBox[{"List", ",", "#"}], "]"}], "&"}], "/@", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"dofuninput", "\[Equal]", "True"}], ",", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"List", "@@", "res"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "#", "]"}], "\[Equal]", 
                    "DoFun`DoDSERGE`P"}], "||", 
                    RowBox[{
                    RowBox[{"Head", "[", "#", "]"}], "\[Equal]", 
                    "DoFun`DoDSERGE`V"}], "||", 
                    RowBox[{
                    RowBox[{"Head", "[", "#", "]"}], "\[Equal]", 
                    "DoFun`DoDSERGE`S"}], "||", 
                    RowBox[{
                    RowBox[{"Head", "[", "#", "]"}], "\[Equal]", 
                    "DoFun`DoDSERGE`dR"}]}], "&"}]}], "]"}], ",", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"List", "@@", "res"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "#", "]"}], "\[Equal]", "G"}], "||", 
                    
                    RowBox[{
                    RowBox[{"Head", "[", "#", "]"}], "\[Equal]", "Gamma0"}], "||", 
                    RowBox[{
                    RowBox[{"Head", "[", "#", "]"}], "\[Equal]", "Gamma0n"}], 
                    "||", 
                    RowBox[{
                    RowBox[{"Head", "[", "#", "]"}], "\[Equal]", "dtR"}]}], 
                    "&"}]}], "]"}]}], "]"}]}], ",", "1"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "_Symbol", ",", 
            "Infinity"}], "]"}], "//", "DeleteDuplicates"}], ",", 
         "extmomenta"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "/.", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"explicittrue", "===", "True"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dofuninput", "===", "True"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"DoFun`DoDSERGE`V", "[", "x__", "]"}], "\[Rule]", 
               RowBox[{"DoFun`DoDSERGE`V", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"DoFun`DoAE`explicit", "\[Rule]", "True"}]}], 
                "]"}]}], ",", 
              RowBox[{
               RowBox[{"DoFun`DoDSERGE`P", "[", "x__", "]"}], "\[Rule]", 
               RowBox[{"DoFun`DoDSERGE`P", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"DoFun`DoAE`explicit", "\[Rule]", "True"}]}], 
                "]"}]}], ",", 
              RowBox[{
               RowBox[{"DoFun`DoDSERGE`S", "[", "x__", "]"}], "\[Rule]", 
               RowBox[{"DoFun`DoDSERGE`S", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"DoFun`DoAE`explicit", "\[Rule]", "True"}]}], 
                "]"}]}], ",", 
              RowBox[{
               RowBox[{"DoFun`DoDSERGE`dR", "[", "x__", "]"}], "\[Rule]", 
               RowBox[{"DoFun`DoDSERGE`dR", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"DoFun`DoAE`explicit", "\[Rule]", "True"}]}], 
                "]"}]}], ",", 
              RowBox[{
               RowBox[{"delta", "[", "x_", "]"}], "\[Rule]", 
               RowBox[{"DoFun`DoFR`deltam", "[", "x", "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Global`G", "[", "x__", "]"}], "\[Rule]", 
               RowBox[{"Global`G", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"explicitERGE", "\[Rule]", "True"}]}], "]"}]}], ",", 
              
              RowBox[{
               RowBox[{"Global`Gamman", "[", "x__", "]"}], "\[Rule]", 
               RowBox[{"Global`Gamman", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"explicitERGE", "\[Rule]", "True"}]}], "]"}]}], ",", 
              
              RowBox[{
               RowBox[{"Global`Gamma0n", "[", "x__", "]"}], "\[Rule]", 
               RowBox[{"Global`Gamma0n", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"explicitERGE", "\[Rule]", "True"}]}], "]"}]}], ",", 
              
              RowBox[{
               RowBox[{"Global`dtR", "[", "x__", "]"}], "\[Rule]", 
               RowBox[{"Global`dtR", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"explicitERGE", "\[Rule]", "True"}]}], "]"}]}], ",", 
              
              RowBox[{
               RowBox[{"delta", "[", "x_", "]"}], "\[Rule]", 
               RowBox[{"deltamom", "[", "x", "]"}]}]}], "}"}]}], "]"}], ",", 
          RowBox[{"1", "\[Rule]", "1"}]}], "]"}]}], "/.", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"intmomenta", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<q\>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "intmomenta", "]"}]}], "}"}]}], "]"}]}]}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.69688227416455*^9, 3.6968824986880703`*^9}, {
   3.696884766141602*^9, 3.696884816462879*^9}, {3.6968850966914377`*^9, 
   3.6968851325277967`*^9}, {3.6968851987323017`*^9, 3.6968851996008463`*^9}, 
   3.696885246755939*^9, {3.696887784184824*^9, 3.6968878132945127`*^9}, {
   3.696887860651787*^9, 3.696887939257641*^9}, {3.6968879860803747`*^9, 
   3.696888058281816*^9}, {3.6968880980588427`*^9, 3.69688810436047*^9}, {
   3.696888192412715*^9, 3.69688820255049*^9}, {3.696888256008719*^9, 
   3.6968882576923237`*^9}, {3.6969668236933603`*^9, 3.69696684088482*^9}, {
   3.696966952359467*^9, 3.6969669557813683`*^9}, {3.6969670008834476`*^9, 
   3.696967034588435*^9}, {3.696967076903911*^9, 3.696967077276311*^9}, {
   3.696983763720763*^9, 3.6969837659902163`*^9}, {3.6969839209234467`*^9, 
   3.696983926792672*^9}, {3.696983964257813*^9, 3.69698399127035*^9}, {
   3.6969840469755583`*^9, 3.696984055452202*^9}, {3.696984239822698*^9, 
   3.696984254851942*^9}, 3.696984304208901*^9, {3.696984366483296*^9, 
   3.696984391813799*^9}, {3.696984425675726*^9, 3.6969844659679117`*^9}, {
   3.696984544463821*^9, 3.696984552176731*^9}, {3.6969846972668962`*^9, 
   3.696984714799078*^9}, {3.697052024608184*^9, 3.6970521221382523`*^9}, {
   3.697069468315729*^9, 3.697069522522242*^9}, {3.6970695581238422`*^9, 
   3.697069558316608*^9}, {3.697069878752981*^9, 3.697069879101604*^9}, {
   3.697069999902978*^9, 3.697070050312735*^9}, {3.697070166949106*^9, 
   3.697070197625112*^9}, {3.69707026838492*^9, 3.697070276522545*^9}, {
   3.697071143275383*^9, 3.697071143748102*^9}, {3.697071324154072*^9, 
   3.697071325106721*^9}, {3.697121964405113*^9, 3.697121976408155*^9}, {
   3.6971221196882257`*^9, 3.6971221242695103`*^9}, {3.697319276750004*^9, 
   3.697319278469331*^9}, {3.697319443411345*^9, 3.697319459275988*^9}, {
   3.69731975642091*^9, 3.697319803951233*^9}, 3.697320187250493*^9, {
   3.697320240543335*^9, 3.69732027038597*^9}, {3.697320867848712*^9, 
   3.6973209304590197`*^9}, {3.697321034516438*^9, 3.697321070257326*^9}, {
   3.6973783155747337`*^9, 3.6973783322962923`*^9}, {3.6973786660664988`*^9, 
   3.69737867374444*^9}, {3.6973787383352127`*^9, 3.6973788136112413`*^9}, {
   3.69737891520905*^9, 3.6973789206488667`*^9}, {3.6973790205987387`*^9, 
   3.6973790207096357`*^9}, {3.697380540990571*^9, 3.697380598655841*^9}, {
   3.697380659668741*^9, 3.697380660073985*^9}, {3.697380784203136*^9, 
   3.697380834246098*^9}, {3.697381771350049*^9, 3.697381783264619*^9}, {
   3.6973819463682327`*^9, 3.697381964589959*^9}, {3.6973820581837177`*^9, 
   3.6973822772765303`*^9}, {3.697382382887177*^9, 3.697382511378311*^9}, {
   3.697382571699992*^9, 3.6973826603697567`*^9}, {3.697382823498424*^9, 
   3.697382828361196*^9}, {3.697382896656954*^9, 3.6973829059234667`*^9}, {
   3.69738297041963*^9, 3.697383013971651*^9}, {3.697383049103372*^9, 
   3.697383055542651*^9}, {3.697383111248801*^9, 3.6973831165572023`*^9}, {
   3.697383187237773*^9, 3.697383224619573*^9}, {3.697383381218184*^9, 
   3.697383384513015*^9}, {3.697383427939981*^9, 3.697383550034678*^9}, {
   3.69738359086805*^9, 3.697383596806395*^9}, {3.697383656723157*^9, 
   3.697383707989159*^9}, {3.697383766501286*^9, 3.6973837673981*^9}, 
   3.697388211340069*^9, {3.6973883989387703`*^9, 3.697388425034462*^9}, 
   3.6973885211838093`*^9, 3.697388647931013*^9, {3.697388816283773*^9, 
   3.697388848317993*^9}, {3.697388903604278*^9, 3.697388949730208*^9}, {
   3.697389019522201*^9, 3.697389054469445*^9}, {3.697389086062583*^9, 
   3.697389095809895*^9}, {3.6973893351252537`*^9, 3.697389380309923*^9}, {
   3.697481746928697*^9, 3.6974817517885838`*^9}, {3.697481790138995*^9, 
   3.6974818183211727`*^9}, {3.697481853372978*^9, 3.69748186988113*^9}, {
   3.697481920476967*^9, 3.697481938710456*^9}, {3.697484335870154*^9, 
   3.697484413071417*^9}, {3.6974847724875*^9, 3.697484773085861*^9}, {
   3.69861273141551*^9, 3.69861274484225*^9}, {3.698612787741898*^9, 
   3.698612832426919*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main Module", "Section",
 CellChangeTimes->{{3.689620672178933*^9, 3.689620677297414*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"doEDSE", "[", 
    RowBox[{
    "Fields_List", ",", "Interactions_List", ",", "Derivatives_List", ",", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DoFunInput", "\[Rule]", "True"}], ",", 
        RowBox[{"DoFunOutput", "\[Rule]", "True"}], ",", 
        RowBox[{"BareVertices", "\[Rule]", 
         RowBox[{"{", "}"}]}]}], "}"}], "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fieldlist", ",", "dualfieldlist", ",", "bosonlist", ",", "fermionlist",
        ",", "afermionlist", ",", "fermionslist", ",", "propagatorlist", ",", 
       "interactionslist", ",", "interactionslistcount", ",", 
       "interactionsbarelist", ",", "interactionsbarelistcount", ",", "expr", 
       ",", "derivativesfull", ",", "derivativesfullpre"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "Derivatives", "]"}], "\[Equal]", "0"}], ",", 
        
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"doEDSE", "::", "noderivativesspecified"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"fieldlist", "=", 
       RowBox[{"Flatten", "[", "Fields", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"dualfieldlist", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"fieldlist", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"PermutationReplace", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "fieldlist", "]"}], "]"}], ",", 
          RowBox[{"Cycles", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"#", "+", "1"}]}], "}"}], "&"}], "/@", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"fieldlist", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"First", "/@", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Fields", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"ListQ", "[", "#", "]"}], "&"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
                 "1"}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fermionslist", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Fields", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Fields", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"bosonlist", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Fields", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"fermionlist", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"afermionlist", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"propagatorlist", "=", 
       RowBox[{"Union", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Riffle", "[", 
            RowBox[{"fieldlist", ",", "dualfieldlist"}], "]"}], ",", "2"}], 
          "]"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}], "&"}], "/@", 
            RowBox[{"Select", "[", 
             RowBox[{"Interactions", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], "&"}]}],
              "]"}]}], ",", "1"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interactionslist", "=", 
       RowBox[{"Union", "[", 
        RowBox[{"propagatorlist", ",", "Interactions"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interactionslistcount", "=", 
       RowBox[{"countinteractions", "[", 
        RowBox[{"interactionslist", ",", "fieldlist"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"interactionsbarelist", "=", 
       RowBox[{"Union", "[", 
        RowBox[{"propagatorlist", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"OptionValue", "[", "BareVertices", "]"}], "]"}], 
            "\[Equal]", "0"}], ",", "Interactions", ",", 
           RowBox[{"OptionValue", "[", "BareVertices", "]"}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interactionsbarelistcount", "=", 
       RowBox[{"countinteractions", "[", 
        RowBox[{"interactionsbarelist", ",", "fieldlist"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"derivativesfullpre", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "DoFunInput", "]"}], "\[Equal]", 
          "True"}], ",", 
         RowBox[{"convertToERGEDerivatives", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Derivatives", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "Derivatives", "]"}]}], "}"}]}], "]"}], 
           ",", "fermionlist", ",", "afermionlist", ",", "bosonlist"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Derivatives", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Length", "[", "Derivatives", "]"}], "-", "i"}], 
                "]"}], "]"}], "[", 
              RowBox[{
               RowBox[{"Length", "[", "Derivatives", "]"}], "-", "i"}], "]"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "Derivatives", "]"}]}], "}"}]}], "]"}], 
           ",", "1"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"derivativesfull", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"derivativesfullpre", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}]}], "]"}], "]"}], ",", 
         RowBox[{"derivativesfullpre", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"expr", "=", 
       RowBox[{
        RowBox[{"singlederivative", "[", 
         RowBox[{
          RowBox[{"actionfrominteractions", "[", 
           RowBox[{"interactionsbarelistcount", ",", "fieldlist"}], "]"}], 
          ",", 
          RowBox[{"Head", "[", 
           RowBox[{"derivativesfullpre", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", "Global`i1", 
          ",", "fermionslist"}], "]"}], "//.", 
        RowBox[{
         RowBox[{"TrMMA", "[", 
          RowBox[{"a___", ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"fieldlist", ",", 
              RowBox[{"Head", "[", "x", "]"}]}], "]"}]}], ",", "b___"}], 
          "]"}], ":>", 
         RowBox[{"TrMMA", "[", 
          RowBox[{"a", ",", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Head", "[", "x", "]"}], "]"}], "~~", "\"\<x\>\""}], 
             "]"}], "@@", "x"}], ",", "b"}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"doEMAGIC", "[", 
       RowBox[{
       "Fields", ",", "Interactions", ",", "expr", ",", "derivativesfull", 
        ",", 
        RowBox[{"DoEDSE", "\[Rule]", "True"}], ",", 
        RowBox[{"DoFunOutput", "\[Rule]", 
         RowBox[{"OptionValue", "[", "DoFunOutput", "]"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.692012764524016*^9, 3.6920127673473377`*^9}, {
   3.692012801806118*^9, 3.6920128182952957`*^9}, {3.692012852439414*^9, 
   3.692012861744673*^9}, {3.692012892365158*^9, 3.692012971261073*^9}, {
   3.6920130396113253`*^9, 3.692013056487294*^9}, {3.692013234392473*^9, 
   3.692013300635757*^9}, {3.6920133508013353`*^9, 3.692013352583811*^9}, {
   3.692013592593363*^9, 3.6920136540758057`*^9}, {3.692013892927433*^9, 
   3.692014012358426*^9}, {3.6920141047459497`*^9, 3.6920141266441402`*^9}, {
   3.6920141634826813`*^9, 3.692014177420843*^9}, {3.6920145931621447`*^9, 
   3.6920146565166407`*^9}, {3.6920146932322607`*^9, 3.692014772655381*^9}, {
   3.692014807974992*^9, 3.692014812102681*^9}, {3.6920150741795397`*^9, 
   3.692015116286957*^9}, {3.692016004778447*^9, 3.69201604063395*^9}, {
   3.692016874120761*^9, 3.692016918674885*^9}, {3.692016960409452*^9, 
   3.692016960584486*^9}, {3.6920170427430964`*^9, 3.692017047735614*^9}, {
   3.692018169119598*^9, 3.692018178062204*^9}, {3.692093797850499*^9, 
   3.6920938540760393`*^9}, {3.692175793944832*^9, 3.692175814981123*^9}, {
   3.6921759194199457`*^9, 3.6921759217296553`*^9}, {3.692181890897484*^9, 
   3.6921819013771772`*^9}, {3.692181949353146*^9, 3.6921819859848127`*^9}, {
   3.692715457531066*^9, 3.692715461907339*^9}, 3.692717623478104*^9, {
   3.6932765328725367`*^9, 3.693276551693294*^9}, 3.693344862569233*^9, {
   3.693346676865344*^9, 3.693346717742763*^9}, {3.693346888351181*^9, 
   3.693346891691371*^9}, {3.693347291907832*^9, 3.6933473043285313`*^9}, {
   3.693347364444269*^9, 3.693347378141261*^9}, {3.693347478741868*^9, 
   3.693347648120619*^9}, {3.693348576009737*^9, 3.693348600138459*^9}, {
   3.693514647951749*^9, 3.6935146813250437`*^9}, {3.693515265713752*^9, 
   3.69351526876758*^9}, {3.693515411783475*^9, 3.693515415341494*^9}, {
   3.693515464969049*^9, 3.6935154799614983`*^9}, {3.693515511821748*^9, 
   3.693515527331793*^9}, {3.693515564747327*^9, 3.693515566391715*^9}, {
   3.693515598293359*^9, 3.6935156080015097`*^9}, {3.6935157743238707`*^9, 
   3.69351581099312*^9}, 3.693515885170258*^9, {3.693516014243541*^9, 
   3.6935160604314623`*^9}, {3.693516101143917*^9, 3.693516108432115*^9}, {
   3.693516144178133*^9, 3.693516144766472*^9}, {3.693519998683782*^9, 
   3.693520004659307*^9}, {3.6935201446400023`*^9, 3.69352014835536*^9}, {
   3.693582895182838*^9, 3.6935829586893883`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "the", " ", "more", " ", "generic", " ", "one", " ", "with", " ", "eqn", 
   " ", "provided", " ", "as", " ", "FORM", " ", "string"}], "*)"}]], "Input",\

 CellChangeTimes->{{3.6920131829497223`*^9, 3.692013202194717*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"doEMAGIC", "[", 
    RowBox[{"Fields_List", ",", "Interactions_List", ",", "Eqn_", ",", 
     RowBox[{"Derivativesfull_:", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SetFieldsToZero", "\[Rule]", "True"}], ",", 
        RowBox[{"DoFunOutput", "\[Rule]", "True"}], ",", 
        RowBox[{"DoEDSE", "\[Rule]", "False"}]}], "}"}], "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "timeString", ",", "formFile1", ",", "resFile1", ",", "formFile2", ",", 
       "resFile2", ",", "maxextfields", ",", "fieldlist", ",", 
       "dualfieldlist", ",", "bosonlist", ",", "fermionlist", ",", 
       "afermionlist", ",", "smallerbosons", ",", "smallerfermions", ",", 
       "smallerafermions", ",", "propagatorlist", ",", "propagatorlistall", 
       ",", "regulatorlist", ",", "interactionslist", ",", 
       "interactionslistpre", ",", "interactionslistcount", ",", "nafermions",
        ",", "mastereq", ",", "formCode", ",", "file", ",", 
       "formProcessResult", ",", "formresult", ",", "formexpr"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"checkFormExecutable", "[", "]"}], "\[Equal]", "False"}], 
        ",", 
        RowBox[{
         RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "Interactions", "]"}], ",", 
            RowBox[{"Flatten", "[", "Fields", "]"}]}], "]"}], "]"}], ">", 
         "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"doERGE", "::", "fieldsundefinedinteractions"}], ",", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Complement", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", "Interactions", "]"}], ",", 
              RowBox[{"Flatten", "[", "Fields", "]"}]}], "]"}], "]"}]}], 
          "]"}], ";", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "Fields", "]"}], "\[NotEqual]", "2"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"doERGE", "::", "fieldspecificationinvalid"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"timeString", "=", 
       RowBox[{"StringJoin", "@", 
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringLength", "[", 
                 RowBox[{"ToString", "[", "#", "]"}], "]"}], "\[Equal]", 
                "1"}], ",", 
               RowBox[{"\"\<0\>\"", "~~", 
                RowBox[{"ToString", "[", "#", "]"}]}], ",", 
               RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], ",", 
            RowBox[{"Date", "[", "]"}]}], "]"}], ",", "\"\<-\>\""}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debuggingMode", "&&", 
         RowBox[{"Not", "[", 
          RowBox[{"DirectoryQ", "[", "cacheFilesDirectory", "]"}], "]"}]}], 
        ",", 
        RowBox[{"CreateDirectory", "[", "cacheFilesDirectory", "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"formFile1", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
           "debuggingMode", ",", "cacheFilesDirectory", ",", 
            "$TemporaryDirectory"}], "]"}], ",", 
          RowBox[{
          "\"\<runform1_\>\"", "<>", "timeString", "<>", "\"\<.frm\>\""}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"resFile1", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
           "debuggingMode", ",", "cacheFilesDirectory", ",", 
            "$TemporaryDirectory"}], "]"}], ",", 
          RowBox[{
          "\"\<res1_\>\"", "<>", "timeString", "<>", "\"\<.txt\>\""}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"maxextfields", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"6", ",", 
         RowBox[{
          RowBox[{"Length", "[", "Derivativesfull", "]"}], "+", "3"}]}], 
        "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "for", " ", "setting", " ", "vertices", " ", "to", " ", "zero"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"fieldlist", "=", 
       RowBox[{"Flatten", "[", "Fields", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"dualfieldlist", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"fieldlist", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"PermutationReplace", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "fieldlist", "]"}], "]"}], ",", 
          RowBox[{"Cycles", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"#", "+", "1"}]}], "}"}], "&"}], "/@", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"fieldlist", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"First", "/@", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Fields", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"ListQ", "[", "#", "]"}], "&"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
                 "1"}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bosonlist", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Fields", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"fermionlist", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"afermionlist", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"smallerbosons", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"bosonlist", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"bosonlist", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "bosonlist", "]"}]}], "}"}]}], "]"}], ",",
          "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"smallerfermions", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"fermionlist", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"fermionlist", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "fermionlist", "]"}]}], "}"}]}], "]"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"smallerafermions", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"afermionlist", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"afermionlist", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "afermionlist", "]"}]}], "}"}]}], "]"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"propagatorlist", "=", 
       RowBox[{"Union", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Riffle", "[", 
            RowBox[{"fieldlist", ",", "dualfieldlist"}], "]"}], ",", "2"}], 
          "]"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}], "&"}], "/@", 
            RowBox[{"Select", "[", 
             RowBox[{"Interactions", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], "&"}]}],
              "]"}]}], ",", "1"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"propagatorlistall", "=", 
       RowBox[{"Tuples", "[", 
        RowBox[{"fieldlist", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Union", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"selectallprops", "[", "#", "]"}], "&"}], "/@", 
           "Interactions"}], ")"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"interactionslist", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"Interactions", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], ">", "2"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"interactionslistpre", "=", 
       RowBox[{"Union", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"selectinteractionspre", "[", "#", "]"}], "&"}], "/@", 
          "interactionslist"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interactionslistcount", "=", 
       RowBox[{"countinteractions", "[", 
        RowBox[{"interactionslist", ",", "fieldlist"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"formCode", "=", 
       RowBox[{
       "\"\<Autodeclare I i;\nAutodeclare CFunction f;\nSymbol n;\nCFunction \
sign,Gammakeep,delta(symmetric),deltaf(symmetric);\nFunction \
Tr,Der,GM,GammaM,etaM,sign,GammaM2,G,GL,GR,Gamma0,end,nfF,Trnc;\n\n\
******************************************************************************\
**\n* all species as CFunctions\nFunction \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fieldlist", "]"}], "<>", 
        "\"\<;\nFunction \>\"", "<>", 
        RowBox[{"stringListJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<x\>\""}], "&"}], "/@",
           "fieldlist"}], "]"}], "<>", 
        "\"\<;\n\n* sets (field-specific)\nset boson: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "bosonlist", "]"}], "<>", 
        "\"\<;\nset fermion: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fermionlist", "]"}], "<>", 
        "\"\<;\nset afermion: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "afermionlist", "]"}], "<>", 
        "\"\<;\n\nset fermions: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"fermionlist", ",", "afermionlist"}], "]"}], "]"}], "<>", 
        "\"\<;\nset fields: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fieldlist", "]"}], "<>", 
        "\"\<;\nset dualfields: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "dualfieldlist", "]"}], "<>", 
        "\"\<;\n\nset Gmatrix: GL,GR,GM,GammaM,etaM;\n\
******************************************************************************\
**\n*turn off runtime statistics\nOff statistics;\n.sort\n\
******************************************************************************\
**\n\nLocal D=\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "Derivativesfull", "]"}], ">", "0"}], ",", 
          RowBox[{"derivativestring", "[", "Derivativesfull", "]"}], ",", 
          "\"\<\>\""}], "]"}], "<>", "\"\<(\>\"", "<>", 
        RowBox[{"converttoformstring", "[", "Eqn", "]"}], "<>", "\"\<)\>\"", 
        "<>", "\"\<;\nsum iy1,...,iy50;\n\n*insert end markers (rotating Tr \
if required)\nid Tr(?a,Gamma0(?b),?c)=Tr(Gamma0(?b),?c,?a);\nid \
Tr(?a)=Tr(?a,end);\n\n*remove Tr\nRepeat; \nid \
Tr(nfF?(?a),?b)=nfF(?a)*Tr(?b);\nid Tr(nfF?,?b)=nfF*Tr(?b);\nid Tr()=1;\n\
EndRepeat;\n\n*insert derivative (field-specific)\nRepeat;\n\>\"", "<>", 
        RowBox[{"StringJoin", "@@", 
         RowBox[{"Riffle", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"xreplacement", "[", 
              RowBox[{"#", ",", "propagatorlistall", ",", "fieldlist"}], 
              "]"}], "&"}], "/@", 
            RowBox[{"Table", "[", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "fieldlist", "]"}]}], "}"}]}], "]"}]}],
            ",", "\"\<\\n\>\""}], "]"}]}], "<>", 
        "\"\<\nEndRepeat;\n\n*apply derivative rules\nRepeat;\nid \
Der(?b)*end=0;\n\n*derivative acting on field\nRepeat;\nid \
Der(f1?boson(i1?))*f2?fields(i2?)=deltaf(f1,f2)*delta(i1,i2)+f2(i2)*Der(f1(i1)\
);\nid Der(f1?fermions(i1?))*f2?fields(i2?)=deltaf(f1,f2)*delta(i1,i2)+sign(\
f2(i2))*f2(i2)*Der(f1(i1));\nid deltaf(f1?,f1?)=1;\nid deltaf(f1?,f2?)=0;\n\
EndRepeat;\n\n*remove dummy deltas using dollar variables\n\
if(match(delta(i1?dummyindices_$a1,i2?!dummyindices_$a2))|| \
match(delta(i1?dummyindices_$a1,i2?dummyindices_$a2)));\nArgument;\nid \
$a1=$a2;\nArgument;\nid $a1=$a2;\nEndargument;\nEndargument;\nendif;\nid \
delta(i1?,i1?)=1;\n\n*explicit G\nid \
Der(f1?boson(i1?))*G(f2?(i2?),f3?(i3?))=-GL(f2(i2))*GammaM(f1(i1))*GR(f3(i3))+\
G(f2(i2),f3(i3))*Der(f1(i1));\nid \
Der(f1?fermions(i1?))*G(f2?(i2?),f3?(i3?))=-sign(f2(i2))*GL(f2(i2))*etaM*\
GammaM(f1(i1))*GR(f3(i3))+sign(f2(i2),f3(i3))*G(f2(i2),f3(i3))*Der(f1(i1));\n\
\n*GR and GL\nid \
Der(f1?boson(i1?))*GL(f2?(i2?))=-GL(f2(i2))*GammaM(f1(i1))*GM+GL(f2(i2))*Der(\
f1(i1));\nid \
Der(f1?fermions(i1?))*GL(f2?(i2?))=-sign(f2(i2))*GL(f2(i2))*etaM*GammaM(f1(i1)\
)*GM+sign(f2(i2))*GL(f2(i2))*etaM*Der(f1(i1));\n\nid \
Der(f1?boson(i1?))*GR(f2?(i2?))=-GM*GammaM(f1(i1))*GR(f2(i2))+GR(f2(i2))*Der(\
f1(i1));\nid \
Der(f1?fermions(i1?))*GR(f2?(i2?))=-etaM*GM*etaM*GammaM(f1(i1))*GR(f2(i2))+\
sign(f2(i2))*etaM*GR(f2(i2))*Der(f1(i1));\n\n*GM\nid \
Der(f?boson(i1?))*GM=-GM*GammaM(f(i1))*GM+GM*Der(f(i1));\nid \
Der(f?fermions(i1?))*GM=-etaM*GM*etaM*GammaM(f(i1))*GM+etaM*GM*etaM*Der(f(i1))\
;\n\n*GammaM\nid \
Der(f?boson(i1?))*GammaM(?a)=GammaM(f(i1),?a)+GammaM(?a)*Der(f(i1));\nid \
Der(f?fermions(i1?))*GammaM(?a)=GammaM(f(i1),?a)+sign(?a)*etaM*GammaM(?a)*\
etaM*Der(f(i1));\n\n*etaM\nid Der(f1?(i1?))*etaM=etaM*Der(f1(i1));\n\n*Gamma0\
\n*id Der(f?boson(i1?))*Gamma0(?a)=Gamma0(f(i1),?a)+Gamma0(?a)*Der(f(i1));\n\
*id Der(f?fermions(i1?))*Gamma0(?a)=Gamma0(f(i1),?a)+sign(?a)*Gamma0(?a)*Der(\
f(i1));\nid Der(f?(i1?))*Gamma0(?a)=Gamma0(?a)*Der(f(i1));\n\n*sign\nid \
Der(f1?(i1?))*sign(?a)=sign(?a)*Der(f1(i1));\n\nEndRepeat;\n\nRepeat;\nid \
sign(fphi?boson(i?))=1;\nid sign(fpsi?fermions(i?))=-1;\nid \
sign(fphi?boson(i?),?a)=sign(?a);\nid sign(fpsi?fermions(i?),?a)=-sign(?a);\n\
id sign()=1;\nEndRepeat;\n\n* remove etaM squares\nrepeat id etaM*etaM=1;\n\n\
* remove end markers\nid end=1;\n\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "SetFieldsToZero", "]"}], "\[Equal]", 
           "True"}], ",", 
          "\"\<\n*************************************************************\
*******************\n*set all fields to zero\nid f?fields(i1?)=0;\n\>\"", 
          ",", "\"\<\>\""}], "]"}], "<>", 
        "\"\<\n***************************************************************\
*****************\n* set non-existing propagators to zero\n\>\"", "<>", 
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{"setpropagatorstozero", "/@", 
           RowBox[{"Complement", "[", 
            RowBox[{"propagatorlistall", ",", "propagatorlist"}], "]"}]}], 
          ",", "\"\<\\n\>\""}], "]"}], "<>", 
        "\"\<\n* already set vertices to zero before inserting propagators \
(field specific)\nRepeat;\nid GammaM(?a)=Gammakeep(?a)*GammaM2(?a);\n\
EndRepeat;\n\>\"", " ", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"gammakeepstring", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
          "interactionslistpre"}], "]"}], "<>", "\"\<\n\>\"", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"gammakeepstring", "[", 
            RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\"\<f\>\"", "~~", 
               RowBox[{"ToString", "[", "i", "]"}], "~~", "\"\<?\>\""}], ",", 
              
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "maxextfields"}], "}"}]}], "]"}]}], 
         "]"}], "<>", 
        "\"\<\nid GammaM2(?a)=GammaM(?a);\n.sort\n\
******************************************************************************\
*\n*put Tr around everything\nid nfF?Gmatrix(?a1)=Trnc(nfF(?a1));\nid \
nfF?Gmatrix=Trnc(nfF);\nrepeat id Trnc(?a)*Trnc(?b)=Trnc(?a,?b);\nid \
Trnc(?a)=Tr(?a);\n.sort\n\
******************************************************************************\
*\n*write to file\nFormat mathematica;\n#write <\>\"", "<>", "resFile1", 
        "<>", "\"\<> \\\"(%E)\\\", D\n.end\>\""}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"file", "=", 
       RowBox[{"OpenWrite", "[", "formFile1", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"file", ",", "formCode"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"run", " ", "FORM"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"formProcessResult", "=", 
       RowBox[{"RunProcess", "[", 
        RowBox[{"{", 
         RowBox[{"formExecutable", ",", "\"\<-q\>\"", ",", "formFile1"}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"check", " ", "exit", " ", "code"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"formProcessResult", "[", "\"\<ExitCode\>\"", "]"}], "=!=", 
         "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"doERGE", "::", "firstformscriptfailed"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"formresult", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"ReadString", "[", "resFile1", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<_?\>\"", "\[Rule]", "\"\<\>\""}], ",", 
                RowBox[{"\"\<\\n\>\"", "\[Rule]", "\"\< \>\""}], ",", 
                RowBox[{"\"\<Tr[\>\"", "\[Rule]", "\"\<TrMMA[\>\""}]}], 
               "}"}]}], "]"}], "]"}], "//.", 
           RowBox[{
            RowBox[{"Global`TrMMA", "[", 
             RowBox[{"x___", ",", "a_Integer", ",", "y___"}], "]"}], 
            "\[Rule]", 
            RowBox[{"a", "*", 
             RowBox[{"Global`TrMMA", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}]}]}], "//.", 
          RowBox[{
           RowBox[{"Global`TrMMA", "[", 
            RowBox[{"x___", ",", 
             RowBox[{"Global`G", "[", "z__", "]"}], ",", "y___"}], "]"}], 
           "\[Rule]", 
           RowBox[{
            RowBox[{"Global`G", "[", "z", "]"}], "*", 
            RowBox[{"Global`TrMMA", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}]}]}], "//.", 
         RowBox[{
          RowBox[{"Global`TrMMA", "[", 
           RowBox[{"x___", ",", 
            RowBox[{"Global`Gamma0", "[", "z__", "]"}], ",", "y___"}], "]"}], 
          "\[Rule]", 
          RowBox[{
           RowBox[{"Global`Gamma0", "[", "z", "]"}], "*", 
           RowBox[{"Global`TrMMA", "[", 
            RowBox[{"x", ",", "y"}], "]"}]}]}]}], "/.", 
        RowBox[{
         RowBox[{"Global`TrMMA", "[", "]"}], "\[Rule]", "1"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"formexpr", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ExportString", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"formresult", "/.", 
             RowBox[{
              RowBox[{"Global`TrMMA", "[", "a__", "]"}], "\[RuleDelayed]", 
              RowBox[{"toTrace", "[", 
               RowBox[{
                RowBox[{"Global`TrMMA", "[", "a", "]"}], ",", "fieldlist", 
                ",", "dualfieldlist", ",", "bosonlist", ",", "propagatorlist",
                 ",", "propagatorlist", ",", "interactionslistcount"}], 
               "]"}]}]}], "/.", 
            RowBox[{
             RowBox[{"TrMMA", "[", "a__", "]"}], "\[Rule]", 
             RowBox[{"Global`TrMMA", "[", "a", "]"}]}]}], ",", 
           "\"\<Text\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<[\>\"", "\[Rule]", "\"\<(\>\""}], ",", 
           RowBox[{"\"\<]\>\"", "\[Rule]", "\"\<)\>\""}], ",", 
           RowBox[{"\"\<MMA\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "debuggingMode"}], ",", 
        RowBox[{"DeleteFile", "[", "formFile1", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "debuggingMode"}], ",", 
        RowBox[{"DeleteFile", "[", "resFile1", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"formFile2", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
           "debuggingMode", ",", "cacheFilesDirectory", ",", 
            "$TemporaryDirectory"}], "]"}], ",", 
          RowBox[{
          "\"\<runform2_\>\"", "<>", "timeString", "<>", "\"\<.frm\>\""}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"resFile2", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
           "debuggingMode", ",", "cacheFilesDirectory", ",", 
            "$TemporaryDirectory"}], "]"}], ",", 
          RowBox[{
          "\"\<res2_\>\"", "<>", "timeString", "<>", "\"\<.txt\>\""}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"formCode", "=", 
       RowBox[{"\"\<#define EXTFIELDS \\\"\>\"", "<>", 
        RowBox[{"ToString", "[", "maxextfields", "]"}], "<>", 
        "\"\<\\\"\n \nAutodeclare I i,N;\nAutodeclare CFunction f;\nSymbol \
n,m;\nCFunction Tr(cyclic),G,eta,dtR,Gamma,Gamma2,dtR2,G2,current,Gamma0;\n\n\
set GammadtR: Gamma, dtR, Gamma0;\nset GammaG: Gamma, G, Gamma0;\nset \
GammadtRG: Gamma, G, dtR, Gamma0;\nset GammadtRG2: Gamma2, G2, dtR2, Gamma0;\n\
******************************************************************************\
**\n* all species as CFunctions\nCFunction \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fieldlist", "]"}], "<>", 
        "\"\<;\n\>\"", "<>", 
        RowBox[{"fieldargsymasymstring", "[", 
         RowBox[{"bosonlist", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"fermionlist", ",", "afermionlist"}], "]"}]}], "]"}], 
        "<>", "\"\<;\n\n* sets (field-specific)\nset boson: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "bosonlist", "]"}], "<>", 
        "\"\<;\nset fermion: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fermionlist", "]"}], "<>", 
        "\"\<;\nset afermion: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "afermionlist", "]"}], "<>", 
        "\"\<;\n\nset fermions: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"fermionlist", ",", "afermionlist"}], "]"}], "]"}], "<>", 
        "\"\<;\nset fields: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fieldlist", "]"}], "<>", 
        "\"\<;\nset dualfields: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "dualfieldlist", "]"}], "<>", 
        "\"\<;\n\nset fieldsargs: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<arg\>\""}], "&"}],
           "/@", "fieldlist"}], "]"}], "<>", 
        "\"\<;\n**************************************************************\
******************\n*turn off runtime statistics\nOff statistics;\n.sort\n\
******************************************************************************\
**\nLocal D=\>\"", "<>", "formexpr", "<>", 
        "\"\<;\n\n***********\n*further simplification required...\n\
***********\n\n* remove Tr\nchainout Tr;\nrepeat id Tr(f1?(?a))=f1(?a);\n\
repeat id Tr(n?)=n;\n\n* bring vertices and dtR and propagators in canonical \
order (field-dep)\nRepeat;\n* general reordering first bosons then afermions \
then fermions\nid \
fG?GammadtRG(?a,f1?fermions(i1?),f2?boson(i2?),?b)=fG(?a,f2(i2),f1(i1),?b);\n\
id fG?GammadtRG(?a,f1?fermion(i1?),f2?afermion(i2?),?b)=-fG(?a,f2(i2),f1(i1),?\
b);\n* field-specific ordering of fermion, afermion and boson species among \
themselves\n\>\"", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<id fG?GammadtRG(?a,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<(i1?),\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
            "\"\<(i2?),?b)=fG(?a,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<(i2),\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
            "\"\<(i1),?b);\\n\>\""}], "&"}], "/@", "smallerbosons"}], "]"}], 
        " ", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<id fG?GammadtRG(?a,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<(i1?),\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
            "\"\<(i2?),?b)=-fG(?a,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<(i2),\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
            "\"\<(i1),?b);\\n\>\""}], "&"}], "/@", 
          RowBox[{"Join", "[", 
           RowBox[{"smallerfermions", ",", "smallerafermions"}], "]"}]}], 
         "]"}], "<>", " ", 
        "\"\<\nEndRepeat;\n\n*invert all propagators (DoFun convention)\nid \
G(f1?fermions(i1?),f2?fermions(i2?))=-G(f1(i1),f2(i2));\nid \
G(f1?(i1?),f2?(i2?))=G(f2(i2),f1(i1));\n\n*combine same fields into \
multiindices\nRepeat;\n id \
fG?GammadtRG(?a,f1?(?c),f1?(?d),?b)=fG(?a,f1(?c,?d),?b);\nEndRepeat;\n\n\
*convert to symmetric/antisymmetric (no wildcards possible afterwards)(field \
specific)\nArgument;\n\>\"", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<id \>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<(?a)=\>\"", "<>", 
            
            RowBox[{"ToString", "[", "#", "]"}], "<>", 
            "\"\<arg(?a);\\n\>\""}], "&"}], "/@", "fieldlist"}], "]"}], "<>", 
        "\"\<\nEndArgument;\n*pull out signs\nFactarg G;\nFactarg dtR;\n\
Factarg Gamma;\nFactarg Gamma0;\nrepeat id fG?GammadtRG(?a,-1,?b)=-fG(?a,?b);\
\n.sort\n*********************************************************************\
***********\n*convert vertices back for output (field specific)\nArgument;\n\
\>\"", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<chainout \>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<arg;\\n\>\""}], 
           "&"}], "/@", "fieldlist"}], "]"}], "<>", 
        "\"\<\nEndArgument;\nFactArg Gamma;\nFactArg Gamma0;\nFactArg dtR;\n\
FactArg G;\nArgument;\n\>\"", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<id \>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<arg(i1?)=\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<(i1);\\n\>\""}], 
           "&"}], "/@", "fieldlist"}], "]"}], "<>", 
        "\"\<\nEndArgument;\n\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "DoFunOutput", "]"}], "\[Equal]", 
           "True"}], ",", 
          "\"\<\n*************************************************************\
******************\n*put a Tr around everything for DoFun Compatibility\n\
putinside Tr;\nFactarg Tr;\nrepeat id Tr(n?number_,?a)=n*Tr(?a);\n**invert \
field entries in propagators (cf. DoFun appendix)\nArgument;\n*id \
G(f1?fields[n](i1?),f2?fields[m](i2?))=G(dualfields[n](i1),dualfields[m](i2));\
\nEndArgument;\n\>\"", ",", "\"\<\>\""}], "]"}], "<>", 
        "\"\<\n.sort\n\
******************************************************************************\
*\n*write to file\nFormat mathematica;\n#write <\>\"", "<>", "resFile2", 
        "<>", "\"\<> \\\"(%E)\\\", D\n.end\n\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"file", "=", 
       RowBox[{"OpenWrite", "[", "formFile2", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"file", ",", "formCode"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"run", " ", "FORM"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"formProcessResult", "=", 
       RowBox[{"RunProcess", "[", 
        RowBox[{"{", 
         RowBox[{"formExecutable", ",", "\"\<-q\>\"", ",", "formFile2"}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"check", " ", "exit", " ", "code"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"formProcessResult", "[", "\"\<ExitCode\>\"", "]"}], "=!=", 
         "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"doERGE", "::", "secondformscriptfailed"}], "]"}], ";", " ", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Import", " ", "into", " ", "Mathematica"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"formresult", "=", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ReadString", "[", "resFile2", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<\\n\>\"", "\[Rule]", "\"\< \>\""}], ",", 
            RowBox[{"\"\<Tr[\>\"", "\[Rule]", "\"\<Op[\>\""}], ",", 
            RowBox[{"\"\<Gamma[\>\"", "\[Rule]", "\"\<Gamman[\>\""}], ",", 
            RowBox[{"\"\<Gamma0[\>\"", "\[Rule]", "\"\<Gamma0n[\>\""}], ",", 
            RowBox[{"\"\<G[\>\"", "\[Rule]", "\"\<G[\>\""}], ",", 
            RowBox[{"\"\<dtR[\>\"", "\[Rule]", "\"\<dtR[\>\""}]}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "debuggingMode"}], ",", 
        RowBox[{"DeleteFile", "[", "formFile2", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "debuggingMode"}], ",", 
        RowBox[{"DeleteFile", "[", "resFile2", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "DoFunOutput", "]"}], "\[Equal]", 
         "True"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"convertToDoFun", "[", 
          RowBox[{
          "formresult", ",", "fermionlist", ",", "afermionlist", ",", 
           "bosonlist", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"OptionValue", "[", "DoEDSE", "]"}], "\[Equal]", 
              "True"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "Derivativesfull", "]"}], "\[Equal]", 
                "0"}], ",", 
               RowBox[{"{", "0", "}"}], ",", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"First", "[", "Derivativesfull", "]"}], ",", 
                 RowBox[{"{", "0", "}"}]}], "]"}]}], "]"}], ",", 
             "Derivativesfull"}], "]"}]}], "]"}], "]"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"convertToERGE", "[", "formresult", "]"}], "]"}]}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6918417638246613`*^9, 3.691841906093808*^9}, {
   3.6918421596708603`*^9, 3.691842167651269*^9}, {3.691842966382985*^9, 
   3.6918429978022757`*^9}, 3.691843045680429*^9, {3.691843426987257*^9, 
   3.6918435501636267`*^9}, {3.691843628721675*^9, 3.691843637944929*^9}, {
   3.6918437258033533`*^9, 3.691843726216061*^9}, {3.6918476016738462`*^9, 
   3.6918476310267677`*^9}, {3.691847797506617*^9, 3.6918478027709427`*^9}, {
   3.691853197373489*^9, 3.691853259001524*^9}, {3.6918555862337027`*^9, 
   3.6918556077043*^9}, {3.6918574023688593`*^9, 3.691857437176466*^9}, {
   3.691860437626227*^9, 3.691860451556028*^9}, {3.691930249406893*^9, 
   3.691930292492044*^9}, {3.691930364091989*^9, 3.6919304270255337`*^9}, {
   3.6919305041948557`*^9, 3.691930516794972*^9}, {3.691930593776985*^9, 
   3.691930594461896*^9}, {3.691930656189217*^9, 3.691930676331753*^9}, {
   3.6919310891069193`*^9, 3.691931105098772*^9}, 3.6919324298074408`*^9, {
   3.691932470049543*^9, 3.691932519325816*^9}, {3.6919325736757393`*^9, 
   3.691932575170828*^9}, 3.691933578284628*^9, {3.691946956625779*^9, 
   3.691946980774461*^9}, {3.691948033595789*^9, 3.691948035918255*^9}, {
   3.691950902749732*^9, 3.6919509191071653`*^9}, {3.691988863395225*^9, 
   3.691988886637789*^9}, {3.6919889472421837`*^9, 3.691988948061791*^9}, {
   3.691989183448309*^9, 3.691989183778015*^9}, {3.691994089630363*^9, 
   3.6919940917328863`*^9}, {3.6919941436581507`*^9, 3.691994192568315*^9}, {
   3.691994341243161*^9, 3.6919943723433332`*^9}, {3.691994506401112*^9, 
   3.691994566406846*^9}, 3.69199460867638*^9, {3.691994684960348*^9, 
   3.691994705587882*^9}, {3.691994787879315*^9, 3.6919947954341307`*^9}, {
   3.6919948518537283`*^9, 3.691994881248238*^9}, {3.6919952081781816`*^9, 
   3.691995209168097*^9}, {3.691995281068925*^9, 3.691995349549798*^9}, {
   3.691995566166791*^9, 3.691995631934184*^9}, {3.691995665041746*^9, 
   3.691995681093205*^9}, {3.69199571719269*^9, 3.6919957183127823`*^9}, {
   3.691995768193207*^9, 3.691995792023769*^9}, {3.6919959287923*^9, 
   3.691995961592763*^9}, {3.691997767228113*^9, 3.691997767911242*^9}, {
   3.691997808943351*^9, 3.691997809443605*^9}, {3.6920127600411253`*^9, 
   3.692012761133543*^9}, {3.692015013652308*^9, 3.692015017708633*^9}, {
   3.692016180493314*^9, 3.692016187502358*^9}, {3.692016657629218*^9, 
   3.692016665828504*^9}, {3.692016806030032*^9, 3.69201680662052*^9}, {
   3.692017274659388*^9, 3.692017288272394*^9}, {3.692017442079603*^9, 
   3.6920174626577063`*^9}, {3.692017614016694*^9, 3.692017614414364*^9}, {
   3.692017714699862*^9, 3.6920177226096582`*^9}, {3.692018072248913*^9, 
   3.692018072709577*^9}, {3.692018373161627*^9, 3.692018373560091*^9}, {
   3.692019083047367*^9, 3.6920191152134867`*^9}, {3.692019189361309*^9, 
   3.692019199549679*^9}, {3.692019278418466*^9, 3.692019291860613*^9}, {
   3.692019411235914*^9, 3.692019416813242*^9}, {3.692019464496002*^9, 
   3.6920194668121862`*^9}, {3.692093685954804*^9, 3.692093702185835*^9}, {
   3.6920937586540003`*^9, 3.692093764851397*^9}, {3.692093928728611*^9, 
   3.692093994785714*^9}, {3.6920941148741493`*^9, 3.692094118212874*^9}, {
   3.6920963738167753`*^9, 3.692096384797957*^9}, {3.692096971588901*^9, 
   3.692097111816114*^9}, {3.692097311996073*^9, 3.692097336993078*^9}, {
   3.692178547584065*^9, 3.692178599054056*^9}, {3.6921786854823914`*^9, 
   3.692178688243579*^9}, {3.692180943236713*^9, 3.6921809653642483`*^9}, {
   3.6921816845474854`*^9, 3.692181684965889*^9}, {3.692715579460043*^9, 
   3.692715793067382*^9}, {3.692716003066073*^9, 3.692716024245943*^9}, {
   3.692716094514738*^9, 3.6927161308193007`*^9}, {3.692716163497905*^9, 
   3.692716530065598*^9}, {3.6927166378901253`*^9, 3.692716899604087*^9}, {
   3.692716974381555*^9, 3.692717035717658*^9}, 3.6927170718886757`*^9, {
   3.6927173048694363`*^9, 3.6927173654878893`*^9}, 3.692717405620407*^9, {
   3.692717436991603*^9, 3.692717440806767*^9}, {3.692717706297858*^9, 
   3.69271770679244*^9}, {3.6927177722134247`*^9, 3.692717810637801*^9}, {
   3.692717856294959*^9, 3.6927179544704523`*^9}, {3.692718034673273*^9, 
   3.692718116757461*^9}, {3.6927181697754087`*^9, 3.69271818756735*^9}, {
   3.692718435270533*^9, 3.692718475973661*^9}, {3.692718573621921*^9, 
   3.692718625846778*^9}, {3.6927189113798027`*^9, 3.6927189156227503`*^9}, {
   3.69271919189559*^9, 3.692719196630794*^9}, {3.692719391371866*^9, 
   3.692719393829451*^9}, {3.6927196758838253`*^9, 3.6927197304350023`*^9}, {
   3.692719877546906*^9, 3.692719887920218*^9}, {3.692802444406726*^9, 
   3.692802671526209*^9}, {3.6928027205050097`*^9, 3.692802734336993*^9}, {
   3.692802851571233*^9, 3.692803020226698*^9}, {3.69280330535178*^9, 
   3.692803322907835*^9}, {3.692804175621851*^9, 3.6928042124326344`*^9}, {
   3.692804297889748*^9, 3.692804300160989*^9}, {3.6928047695514393`*^9, 
   3.6928048801718388`*^9}, {3.692804916621771*^9, 3.6928049177826138`*^9}, {
   3.693252084605154*^9, 3.693252121822377*^9}, {3.693256324730625*^9, 
   3.693256330327235*^9}, {3.69325710717899*^9, 3.6932571137956944`*^9}, {
   3.693272255920496*^9, 3.6932722571937237`*^9}, {3.6932738773006277`*^9, 
   3.693273892042076*^9}, {3.693275065705906*^9, 3.693275066125409*^9}, {
   3.6932764687906847`*^9, 3.6932764974047337`*^9}, {3.693276587327965*^9, 
   3.69327660381663*^9}, {3.693276664104746*^9, 3.69327666906426*^9}, {
   3.693276713421215*^9, 3.693276769738606*^9}, {3.693276913494385*^9, 
   3.693276950506978*^9}, 3.693277069879052*^9, {3.693277115539028*^9, 
   3.6932771214565773`*^9}, {3.693277180940675*^9, 3.693277210417807*^9}, {
   3.693277304175482*^9, 3.693277312416069*^9}, {3.6932773512501793`*^9, 
   3.693277379661723*^9}, {3.6933468801394033`*^9, 3.693346922232717*^9}, 
   3.693348353625442*^9, {3.693348624326768*^9, 3.6933486341531687`*^9}, {
   3.693348812435766*^9, 3.693348817765922*^9}, {3.693349343924272*^9, 
   3.693349388404895*^9}, {3.693349828576387*^9, 3.693349889633437*^9}, {
   3.693350032235631*^9, 3.693350033205247*^9}, {3.693350065261221*^9, 
   3.693350065794115*^9}, {3.69335011984979*^9, 3.6933501396495323`*^9}, {
   3.693350173198471*^9, 3.693350174239812*^9}, {3.693511870205537*^9, 
   3.693511870712057*^9}, {3.6935129586569967`*^9, 3.693512981596449*^9}, {
   3.693513144671337*^9, 3.69351314784575*^9}, {3.6935132361177464`*^9, 
   3.693513249822994*^9}, 3.693514343947926*^9, {3.6935168856403303`*^9, 
   3.6935169035254097`*^9}, 3.693517007047035*^9, {3.6935172001553802`*^9, 
   3.693517216011845*^9}, {3.693517491010861*^9, 3.693517495785187*^9}, {
   3.6935194081609592`*^9, 3.693519408551557*^9}, {3.693519893353561*^9, 
   3.693519903358243*^9}, {3.693519954952017*^9, 3.693519976631221*^9}, 
   3.6935205745363913`*^9, 3.693520652448559*^9, {3.6935830148835907`*^9, 
   3.6935830353860693`*^9}, {3.693601528472875*^9, 3.693601538054182*^9}, {
   3.693601848297018*^9, 3.693601973598878*^9}, {3.6936028363662853`*^9, 
   3.693602895020672*^9}, {3.693602930793193*^9, 3.693602933170938*^9}, {
   3.6936029659239397`*^9, 3.693602972612225*^9}, {3.69360309623096*^9, 
   3.693603110702654*^9}, {3.6936031481891537`*^9, 3.693603157420443*^9}, {
   3.6936034278315973`*^9, 3.693603429228961*^9}, {3.6936036536061773`*^9, 
   3.6936037157758512`*^9}, 3.693603784209743*^9, {3.693604014635853*^9, 
   3.693604031025425*^9}, {3.6936045185298643`*^9, 3.693604521844858*^9}, {
   3.693604735642085*^9, 3.693604741625347*^9}, 3.6939452296560297`*^9, {
   3.693945863263504*^9, 3.693945937821418*^9}, {3.693945977493061*^9, 
   3.693946018151381*^9}, {3.6939460698622293`*^9, 3.6939460700075502`*^9}, {
   3.693946585862207*^9, 3.69394659257584*^9}, {3.693948454814973*^9, 
   3.693948470752261*^9}, {3.695062273041452*^9, 3.695062277530223*^9}, {
   3.697484189068778*^9, 3.697484198714079*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"doERGE", "[", 
    RowBox[{
    "Fields_List", ",", "Interactions_List", ",", "Derivatives_List", ",", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DoFunOutput", "\[Rule]", "True"}], ",", 
        RowBox[{"DoFunInput", "\[Rule]", "True"}], ",", 
        RowBox[{"OffDiagonalRegulators", "\[Rule]", "False"}], ",", 
        RowBox[{"MasterEqn", "->", 
         RowBox[{
          RowBox[{"1", "/", "2"}], "*", 
          RowBox[{"Global`TrMMA", "[", 
           RowBox[{
           "Global`dtRMMMA", ",", "Global`etaMMMA", ",", "Global`GMMMA"}], 
           "]"}]}]}]}], "}"}], "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "timeString", ",", "formFile1", ",", "resFile1", ",", "formFile2", ",", 
       "resFile2", ",", "extfields", ",", "fieldlist", ",", "dualfieldlist", 
       ",", "bosonlist", ",", "fermionlist", ",", "afermionlist", ",", 
       "smallerbosons", ",", "smallerfermions", ",", "smallerafermions", ",", 
       "propagatorlist", ",", "regulatorlist", ",", "interactionslist", ",", 
       "interactionslistpre", ",", "interactionslistcount", ",", 
       "derivativesfull", ",", "nafermions", ",", "formCode", ",", "file", 
       ",", "formProcessResult", ",", "formresult", ",", "formexpr"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"checkFormExecutable", "[", "]"}], "\[Equal]", "False"}], 
        ",", 
        RowBox[{
         RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "Interactions", "]"}], ",", 
            RowBox[{"Flatten", "[", "Fields", "]"}]}], "]"}], "]"}], ">", 
         "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"doERGE", "::", "fieldsundefinedinteractions"}], ",", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Complement", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", "Interactions", "]"}], ",", 
              RowBox[{"Flatten", "[", "Fields", "]"}]}], "]"}], "]"}]}], 
          "]"}], ";", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "Derivatives", "]"}], ",", 
            RowBox[{"Flatten", "[", "Fields", "]"}]}], "]"}], "]"}], ">", 
         "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"doERGE", "::", "fieldsundefinedderivatives"}], ",", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Complement", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", "Derivatives", "]"}], ",", 
              RowBox[{"Flatten", "[", "Fields", "]"}]}], "]"}], "]"}]}], 
          "]"}], ";", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "Fields", "]"}], "\[NotEqual]", "2"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"doERGE", "::", "fieldspecificationinvalid"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"timeString", "=", 
       RowBox[{"StringJoin", "@", 
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringLength", "[", 
                 RowBox[{"ToString", "[", "#", "]"}], "]"}], "\[Equal]", 
                "1"}], ",", 
               RowBox[{"\"\<0\>\"", "~~", 
                RowBox[{"ToString", "[", "#", "]"}]}], ",", 
               RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], ",", 
            RowBox[{"Date", "[", "]"}]}], "]"}], ",", "\"\<-\>\""}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debuggingMode", "&&", 
         RowBox[{"Not", "[", 
          RowBox[{"DirectoryQ", "[", "cacheFilesDirectory", "]"}], "]"}]}], 
        ",", 
        RowBox[{"CreateDirectory", "[", "cacheFilesDirectory", "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"formFile1", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
           "debuggingMode", ",", "cacheFilesDirectory", ",", 
            "$TemporaryDirectory"}], "]"}], ",", 
          RowBox[{
          "\"\<runform1_\>\"", "<>", "timeString", "<>", "\"\<.frm\>\""}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"resFile1", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
           "debuggingMode", ",", "cacheFilesDirectory", ",", 
            "$TemporaryDirectory"}], "]"}], ",", 
          RowBox[{
          "\"\<res1_\>\"", "<>", "timeString", "<>", "\"\<.txt\>\""}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"extfields", "=", 
       RowBox[{"Length", "[", "Derivatives", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fieldlist", "=", 
       RowBox[{"Flatten", "[", "Fields", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"dualfieldlist", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"fieldlist", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"PermutationReplace", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "fieldlist", "]"}], "]"}], ",", 
          RowBox[{"Cycles", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"#", "+", "1"}]}], "}"}], "&"}], "/@", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"fieldlist", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"First", "/@", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Fields", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"ListQ", "[", "#", "]"}], "&"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
                 "1"}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bosonlist", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Fields", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"fermionlist", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"afermionlist", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Fields", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"smallerbosons", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"bosonlist", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"bosonlist", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "bosonlist", "]"}]}], "}"}]}], "]"}], ",",
          "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"smallerfermions", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"fermionlist", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"fermionlist", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "fermionlist", "]"}]}], "}"}]}], "]"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"smallerafermions", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"afermionlist", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"afermionlist", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "afermionlist", "]"}]}], "}"}]}], "]"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"propagatorlist", "=", 
       RowBox[{"Union", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Riffle", "[", 
            RowBox[{"fieldlist", ",", "dualfieldlist"}], "]"}], ",", "2"}], 
          "]"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}], "&"}], "/@", 
            RowBox[{"Select", "[", 
             RowBox[{"Interactions", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], "&"}]}],
              "]"}]}], ",", "1"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"regulatorlist", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "OffDiagonalRegulators", "]"}], ",", 
         "propagatorlist", ",", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Riffle", "[", 
            RowBox[{"fieldlist", ",", "dualfieldlist"}], "]"}], ",", "2"}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interactionslist", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"Interactions", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], ">", "2"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"interactionslistpre", "=", 
       RowBox[{"Union", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"selectinteractionspre", "[", "#", "]"}], "&"}], "/@", 
          "interactionslist"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interactionslistcount", "=", 
       RowBox[{"countinteractions", "[", 
        RowBox[{"interactionslist", ",", "fieldlist"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"derivativesfull", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "DoFunInput", "]"}], "\[Equal]", 
          "True"}], ",", 
         RowBox[{"convertToERGEDerivatives", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Derivatives", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "Derivatives", "]"}]}], "}"}]}], "]"}], 
           ",", "fermionlist", ",", "afermionlist", ",", "bosonlist"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Derivatives", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Length", "[", "Derivatives", "]"}], "-", "i"}], 
                "]"}], "]"}], "[", 
              RowBox[{
               RowBox[{"Length", "[", "Derivatives", "]"}], "-", "i"}], "]"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "Derivatives", "]"}]}], "}"}]}], "]"}], 
           ",", "1"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nafermions", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{"Derivatives", ",", "#"}], "]"}], "&"}], "/@", 
          "afermionlist"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"formCode", "=", 
       RowBox[{"\"\<#define EXTFIELDS \\\"\>\"", "<>", 
        RowBox[{"ToString", "[", "extfields", "]"}], "<>", 
        "\"\<\\\"\n \nAutodeclare I i;\nAutodeclare CFunction f;\nSymbol n,m;\
\nFunction Der,Tr,GM,GammaM,GammaM2,dtRM,etaM,end,nfF,Trnc;\nCFunction \
sign,Gammakeep(symmetric);\n\nset Gmatrix:GM,GammaM,dtRM,etaM;\n\
******************************************************************************\
**\n* all species as CFunctions\nCFunction \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fieldlist", "]"}], "<>", 
        "\"\<;\n\>\"", "<>", 
        RowBox[{"fieldargsymasymstring", "[", 
         RowBox[{"bosonlist", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"fermionlist", ",", "afermionlist"}], "]"}]}], "]"}], 
        "<>", "\"\<;\n\n* sets (field-specific)\nset boson: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "bosonlist", "]"}], "<>", 
        "\"\<;\nset fermion: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fermionlist", "]"}], "<>", 
        "\"\<;\nset afermion: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "afermionlist", "]"}], "<>", 
        "\"\<;\n\nset fermions: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"fermionlist", ",", "afermionlist"}], "]"}], "]"}], "<>", 
        "\"\<;\nset fields: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fieldlist", "]"}], "<>", 
        "\"\<;\nset dualfields: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "dualfieldlist", "]"}], "<>", 
        "\"\<;\n\nset fieldsargs: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<arg\>\""}], "&"}],
           "/@", "fieldlist"}], "]"}], "<>", 
        "\"\<;\n**************************************************************\
******************\n*turn off runtime statistics\nOff statistics;\n.sort\n\
******************************************************************************\
**\nLocal D=\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "Derivatives", "]"}], ">", "0"}], ",", 
          RowBox[{"derivativestring", "[", "derivativesfull", "]"}], ",", 
          "\"\<\>\""}], "]"}], "<>", "\"\<(\>\"", "<>", 
        RowBox[{"converttoformstring", "[", 
         RowBox[{"OptionValue", "[", "MasterEqn", "]"}], "]"}], "<>", 
        "\"\<)\>\"", "<>", 
        "\"\<;\n**************************************************************\
******************\n\n*insert end markers (rotating Tr if required)\nid \
Tr(?a,dtRM(?b),?c)=Tr(?c,?a,dtRM(?b));\nid Tr(?a)=Tr(?a,end);\n\n*remove Tr\n\
Repeat; \nid Tr(nfF?(?a),?b)=nfF(?a)*Tr(?b);\nid Tr(nfF?,?b)=nfF*Tr(?b);\nid \
Tr()=1;\nEndRepeat;\n\n\
******************************************************************************\
**\n* carry out derivatives\nRepeat;\n*GM\nid \
Der(f?boson(i?))*GM=-GM*GammaM(f(i))*GM+GM*Der(f(i));\nid \
Der(f?fermions(i?))*GM=-etaM*GM*etaM*GammaM(f(i))*GM+etaM*GM*etaM*Der(f(i));\n\
\n*dtR/end\n*id Der(f?boson(i?))*dtRM=dtRM*Der(f(i));\n*id \
Der(f?fermions(i?))*dtRM=etaM*dtRM*etaM*Der(f(i));\n*id Der(?b)*end=0;\nid \
Der(?b)*dtRM=0;\n\n*GammaM\nid \
Der(f?boson(i?))*GammaM(?a)=GammaM(f(i),?a)+GammaM(?a)*Der(f(i));\nid \
Der(f?fermions(i?))*GammaM(?a)=GammaM(f(i),?a)+sign(?a)*etaM*GammaM(?a)*etaM*\
Der(f(i));\n\n*etaM\nid Der(?a)*etaM=etaM*Der(?a);\n\n*sign\nid \
Der(f1?(i1?))*sign(?a)=sign(?a)*Der(f1(i1));\n\nEndRepeat;\n\n*resolve signs\n\
Repeat;\nid sign(fphi?boson(i?))=1;\nid sign(fpsi?fermions(i?))=-1;\nid \
sign(fphi?boson(i?),?a)=sign(?a);\nid sign(fpsi?fermions(i?),?a)=-sign(?a);\n\
id sign()=1;\nEndRepeat;\n\n* remove etaM squares\nRepeat;\nid etaM*etaM=1;\n\
EndRepeat;\n\n*remove end markers\nid end=1;\n.sort\n\n\
******************************************************************************\
**\n* already set vertices to zero before inserting propagators (field \
specific)\nRepeat;\nid GammaM(?a)=Gammakeep(?a)*GammaM2(?a);\nEndRepeat;\n\
\>\"", " ", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"gammakeepstring", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
          "interactionslistpre"}], "]"}], "<>", "\"\<\n\>\"", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"gammakeepstring", "[", 
            RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\"\<f\>\"", "~~", 
               RowBox[{"ToString", "[", "i", "]"}], "~~", "\"\<?\>\""}], ",", 
              
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "extfields"}], "}"}]}], "]"}]}], 
         "]"}], "<>", 
        "\"\<\nid GammaM2(?a)=GammaM(?a);\n.sort\n\
******************************************************************************\
*\n*put Tr around everything\nid nfF?Gmatrix(?a1)=Trnc(nfF(?a1));\nid \
nfF?Gmatrix=Trnc(nfF);\nrepeat id Trnc(?a)*Trnc(?b)=Trnc(?a,?b);\nid \
Trnc(?a)=Tr(?a);\n.sort\n\
******************************************************************************\
*\n*write to file\nFormat mathematica;\n#write <\>\"", "<>", "resFile1", 
        "<>", "\"\<> \\\"(%E)\\\", D\n.end\n\>\""}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"file", "=", 
       RowBox[{"OpenWrite", "[", "formFile1", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"file", ",", "formCode"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"run", " ", "FORM"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"formProcessResult", "=", 
       RowBox[{"RunProcess", "[", 
        RowBox[{"{", 
         RowBox[{"formExecutable", ",", "\"\<-q\>\"", ",", "formFile1"}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"check", " ", "exit", " ", "code"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"formProcessResult", "[", "\"\<ExitCode\>\"", "]"}], "=!=", 
         "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"doERGE", "::", "firstformscriptfailed"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Import", " ", "into", " ", "Mathematica"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"formresult", "=", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ReadString", "[", "resFile1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<\\n\>\"", "\[Rule]", "\"\< \>\""}], ",", 
            RowBox[{"\"\<Tr[\>\"", "\[Rule]", "\"\<TrMMA[\>\""}]}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"formexpr", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ExportString", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"formresult", "/.", 
             RowBox[{
              RowBox[{"Global`TrMMA", "[", "a__", "]"}], "\[RuleDelayed]", 
              RowBox[{"toTrace", "[", 
               RowBox[{
                RowBox[{"Global`TrMMA", "[", "a", "]"}], ",", "fieldlist", 
                ",", "dualfieldlist", ",", "bosonlist", ",", "propagatorlist",
                 ",", "regulatorlist", ",", "interactionslistcount"}], 
               "]"}]}]}], "/.", 
            RowBox[{
             RowBox[{"TrMMA", "[", "a__", "]"}], "\[Rule]", 
             RowBox[{"Global`TrMMA", "[", "a", "]"}]}]}], ",", 
           "\"\<Text\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<[\>\"", "\[Rule]", "\"\<(\>\""}], ",", 
           RowBox[{"\"\<]\>\"", "\[Rule]", "\"\<)\>\""}], ",", 
           RowBox[{"\"\<MMA\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "debuggingMode"}], ",", 
        RowBox[{"DeleteFile", "[", "formFile1", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "debuggingMode"}], ",", 
        RowBox[{"DeleteFile", "[", "resFile1", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"formFile2", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
           "debuggingMode", ",", "cacheFilesDirectory", ",", 
            "$TemporaryDirectory"}], "]"}], ",", 
          RowBox[{
          "\"\<runform2_\>\"", "<>", "timeString", "<>", "\"\<.frm\>\""}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"resFile2", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
           "debuggingMode", ",", "cacheFilesDirectory", ",", 
            "$TemporaryDirectory"}], "]"}], ",", 
          RowBox[{
          "\"\<res2_\>\"", "<>", "timeString", "<>", "\"\<.txt\>\""}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"formCode", "=", 
       RowBox[{"\"\<#define EXTFIELDS \\\"\>\"", "<>", 
        RowBox[{"ToString", "[", "extfields", "]"}], "<>", 
        "\"\<\\\"\n \nAutodeclare I i;\nAutodeclare CFunction f;\nSymbol n,m;\
\nCFunction Tr(cyclic),G,eta,dtR,Gamma,Gamma2,dtR2,G2,current;\n\nset \
GammadtR: Gamma, dtR;\nset GammaG: Gamma, G;\nset GammadtRG: Gamma, G, dtR;\n\
set GammadtRG2: Gamma2, G2, dtR2;\n\
******************************************************************************\
**\n* all species as CFunctions\nCFunction \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fieldlist", "]"}], "<>", 
        "\"\<;\n\>\"", "<>", 
        RowBox[{"fieldargsymasymstring", "[", 
         RowBox[{"bosonlist", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"fermionlist", ",", "afermionlist"}], "]"}]}], "]"}], 
        "<>", "\"\<;\n\n* sets (field-specific)\nset boson: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "bosonlist", "]"}], "<>", 
        "\"\<;\nset fermion: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fermionlist", "]"}], "<>", 
        "\"\<;\nset afermion: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "afermionlist", "]"}], "<>", 
        "\"\<;\n\nset fermions: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"fermionlist", ",", "afermionlist"}], "]"}], "]"}], "<>", 
        "\"\<;\nset fields: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "fieldlist", "]"}], "<>", 
        "\"\<;\nset dualfields: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", "dualfieldlist", "]"}], "<>", 
        "\"\<;\n\nset fieldsargs: \>\"", "<>", 
        RowBox[{"stringListJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<arg\>\""}], "&"}],
           "/@", "fieldlist"}], "]"}], "<>", 
        "\"\<;\n**************************************************************\
******************\n*turn off runtime statistics\nOff statistics;\n.sort\n\
******************************************************************************\
**\nLocal D=\>\"", "<>", "formexpr", "<>", 
        "\"\<;\n\nid Tr(n?number_,?a)=n*Tr(?a);\n\
******************************************************************************\
**\n*for the case of no derivatives\nid \
Tr(G(f1?(ix1?),f2?(ix2?)),dtR(f3?fermion(ix2?),f4?afermion(ix1?)))=Tr(G(f2(\
ix1),f1(ix2)),dtR(f4(ix2),f3(ix1)));\n\n*order Tr such that smallest ext ind \
is reached first\n#do iext=1,`EXTFIELDS'\n*reverse Tr only if smallest ext \
index is found in the other direction \n*or fermionic tadpole with regulator \
not in canonical order\n\
if(match(Tr(?a1,Gamma(?a2,f1?(i`iext'),?a3),G(?a4),dtR(f2?(i2?),f3?(i3?)),G(?\
a6),Gamma(?a7)))||match(Tr(G(?a),dtR(f3?fermion(ix2?),f4?afermion(ix3?)),G(?b)\
,Gamma(?c)))||match(Tr(G(?a),Gamma(?c),G(?b),dtR(f3?fermion(ix2?),f4?afermion(\
ix3?)))));\nTransform,Tr,reverse(1,last);\nArgument;\nid \
fG?GammadtRG(?a,f1?fermions(i1?),f2?fermions(i2?))=-fG(?a,f2(i2),f1(i1));\nid \
fG?GammadtRG[n](?a,f1?boson(i1?),f2?fermions(i2?))=GammadtRG2[n](?a,f2(i2),f1(\
i1));\nid \
fG?GammadtRG[n](?a,f1?fermions(i1?),f2?boson(i2?))=GammadtRG2[n](?a,f2(i2),f1(\
i1));\nid fG?GammadtRG(?a,f1?boson(i1?),f2?boson(i2?))=fG(?a,f2(i2),f1(i1));\n\
Endargument;\nFactarg Tr;\nrepeat id Tr(n?number_,?a)=n*Tr(?a);\nid \
Tr(?d,dtR(?a),G(?b),Gamma(?c))=Tr(?d,dtR(?a),G(?b),Gamma2(?c));\nelse;\nid \
Tr(?a1,dtR(?a2),G(?a3),Gamma(?a4,f1?(i`iext'),?a5))=Tr(?a1,dtR(?a2),G(?a3),\
Gamma2(?a4,f1(i`iext'),?a5));\nendif;\n#enddo\n\nargument;\nid \
Gamma2(?a)=Gamma(?a);\nid dtR(?a)=current(dtR(?a));\nendargument;\n\n*rename \
all dummy indices to iint\n#do iext=1,{2*`EXTFIELDS'+2}\nid  \
Tr(?a,current(fG1?(?b,f1?(i1?),f2?(i2?))),fG2?(?c,f3?(i2?),f4?(i3?)))=Tr(?a,\
fG1(?b,f1(i1),f2(iint`iext')),current(fG2(?c,f3(iint`iext'),f4(i3))));\nid \
Tr(?a,current(dtR(?b)))=Tr(?a,dtR(?b));\n#enddo\n\n\
******************************************************************************\
**\n**************************************************************************\
******\n* remove Tr\nchainout Tr;\nrepeat id Tr(f1?(?a))=f1(?a);\n\n* bring \
vertices and dtR and propagators in canonical order (field-dep)\nRepeat;\n* \
general reordering first bosons then afermions then fermions\nid \
fG?GammadtRG(?a,f1?fermions(i1?),f2?boson(i2?),?b)=fG(?a,f2(i2),f1(i1),?b);\n\
id fG?GammadtRG(?a,f1?fermion(i1?),f2?afermion(i2?),?b)=-fG(?a,f2(i2),f1(i1),?\
b);\n* field-specific ordering of fermion, afermion and boson species among \
themselves\n\>\"", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<id fG?GammadtRG(?a,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<(i1?),\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
            "\"\<(i2?),?b)=fG(?a,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<(i2),\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
            "\"\<(i1),?b);\\n\>\""}], "&"}], "/@", "smallerbosons"}], "]"}], 
        " ", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<id fG?GammadtRG(?a,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<(i1?),\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
            "\"\<(i2?),?b)=-fG(?a,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<(i2),\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
            "\"\<(i1),?b);\\n\>\""}], "&"}], "/@", 
          RowBox[{"Join", "[", 
           RowBox[{"smallerfermions", ",", "smallerafermions"}], "]"}]}], 
         "]"}], "<>", " ", 
        "\"\<\nEndRepeat;\n\n*invert all propagators (canonical ordering in \
DoFun convention)\nid G(f1?fermions(i1?),f2?fermions(i2?))=-G(f1(i1),f2(i2));\
\nid G(f1?(i1?),f2?(i2?))=G(f2(i2),f1(i1));\n\n*combine same fields into \
multiindices\nRepeat;\n id \
fG?GammadtRG(?a,f1?(?c),f1?(?d),?b)=fG(?a,f1(?c,?d),?b);\nEndRepeat;\n\n\
*convert to symmetric/antisymmetric (no wildcards possible afterwards)(field \
specific)\nArgument;\n\>\"", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<id \>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<(?a)=\>\"", "<>", 
            
            RowBox[{"ToString", "[", "#", "]"}], "<>", 
            "\"\<arg(?a);\\n\>\""}], "&"}], "/@", "fieldlist"}], "]"}], "<>", 
        "\"\<\nEndArgument;\n*pull out signs\nFactarg G;\nFactarg dtR;\n\
Factarg Gamma;\nrepeat id fG?GammadtRG(?a,-1,?b)=-fG(?a,?b);\n.sort\n\
******************************************************************************\
**\n*convert vertices back for output (field specific)\nArgument;\n\>\"", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<chainout \>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<arg;\\n\>\""}], 
           "&"}], "/@", "fieldlist"}], "]"}], "<>", 
        "\"\<\nEndArgument;\nFactArg Gamma;\nFactArg dtR;\nFactArg G;\n\
Argument;\n\>\"", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<id \>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<arg(i1?)=\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<(i1);\\n\>\""}], 
           "&"}], "/@", "fieldlist"}], "]"}], "<>", 
        "\"\<\nEndArgument;\n\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "DoFunOutput", "]"}], "\[Equal]", 
           "True"}], ",", 
          "\"\<\n*************************************************************\
******************\n*put a Tr around everything for DoFun Compatibility\n\
putinside Tr;\nFactarg Tr;\nrepeat id Tr(n?number_,?a)=n*Tr(?a);\n**invert \
field entries in propagators (cf. DoFun appendix)\nArgument;\n*id \
G(f1?fields[n](i1?),f2?fields[m](i2?))=G(dualfields[n](i1),dualfields[m](i2));\
\nEndArgument;\n\>\"", ",", "\"\<\>\""}], "]"}], "<>", 
        "\"\<\n.sort\n\
******************************************************************************\
*\n*write to file\nFormat mathematica;\n#write <\>\"", "<>", "resFile2", 
        "<>", "\"\<> \\\"(%E)\\\", D\n.end\n\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"file", "=", 
       RowBox[{"OpenWrite", "[", "formFile2", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"file", ",", "formCode"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"run", " ", "FORM"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"formProcessResult", "=", 
       RowBox[{"RunProcess", "[", 
        RowBox[{"{", 
         RowBox[{"formExecutable", ",", "\"\<-q\>\"", ",", "formFile2"}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"check", " ", "exit", " ", "code"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"formProcessResult", "[", "\"\<ExitCode\>\"", "]"}], "=!=", 
         "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"doERGE", "::", "secondformscriptfailed"}], "]"}], ";", " ", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Import", " ", "into", " ", "Mathematica"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"formresult", "=", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ReadString", "[", "resFile2", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<\\n\>\"", "\[Rule]", "\"\< \>\""}], ",", 
            RowBox[{"\"\<Tr[\>\"", "\[Rule]", "\"\<Op[\>\""}], ",", 
            RowBox[{"\"\<Gamma[\>\"", "\[Rule]", "\"\<Gamman[\>\""}], ",", 
            RowBox[{"\"\<G[\>\"", "\[Rule]", "\"\<G[\>\""}], ",", 
            RowBox[{"\"\<dtR[\>\"", "\[Rule]", "\"\<dtR[\>\""}]}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "debuggingMode"}], ",", 
        RowBox[{"DeleteFile", "[", "formFile2", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "debuggingMode"}], ",", 
        RowBox[{"DeleteFile", "[", "resFile2", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "DoFunOutput", "]"}], "\[Equal]", 
         "True"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"convertToDoFun", "[", 
          RowBox[{
          "formresult", ",", "fermionlist", ",", "afermionlist", ",", 
           "bosonlist", ",", "Derivatives"}], "]"}], "]"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"convertToERGE", "[", "formresult", "]"}], "]"}]}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689360853144153*^9, 3.689360941206296*^9}, {
   3.689360974989767*^9, 3.689360975455494*^9}, {3.6893613488741903`*^9, 
   3.689361387390938*^9}, {3.689361902243867*^9, 3.689361938477337*^9}, {
   3.689362214498584*^9, 3.689362256450021*^9}, {3.6893623237728977`*^9, 
   3.689362333973139*^9}, {3.689362386484619*^9, 3.689362416807638*^9}, {
   3.689362510314805*^9, 3.689362521342388*^9}, {3.689362594158115*^9, 
   3.689362609007609*^9}, {3.689362736939095*^9, 3.689362749648375*^9}, {
   3.689362803891139*^9, 3.689362807113978*^9}, {3.689362862659368*^9, 
   3.689362873624501*^9}, {3.6893629360072823`*^9, 3.68936294431419*^9}, {
   3.689363287381679*^9, 3.689363359501931*^9}, {3.689363624925322*^9, 
   3.689363653254045*^9}, {3.6893640151160593`*^9, 3.689364047709435*^9}, {
   3.689364447220038*^9, 3.689364460002035*^9}, {3.6893645624661903`*^9, 
   3.6893646287707148`*^9}, {3.689364724563609*^9, 3.689364987746538*^9}, {
   3.689365019457749*^9, 3.6893650369677467`*^9}, {3.689365077129471*^9, 
   3.689365136521009*^9}, {3.689365272493511*^9, 3.689365274653475*^9}, {
   3.689365323229394*^9, 3.689365449575713*^9}, {3.689365528388007*^9, 
   3.6893655345704727`*^9}, {3.689365776614811*^9, 3.689365782829319*^9}, {
   3.689365849558456*^9, 3.6893659005815687`*^9}, {3.6893660017397137`*^9, 
   3.689366014182637*^9}, {3.6893660634863443`*^9, 3.689366067827347*^9}, {
   3.6893661040796223`*^9, 3.689366137480076*^9}, {3.6893665290820713`*^9, 
   3.689366584573045*^9}, {3.689366643756152*^9, 3.689366651272773*^9}, {
   3.68936683493652*^9, 3.689366844743487*^9}, {3.689366905212854*^9, 
   3.689366939940366*^9}, {3.689366971380302*^9, 3.6893669772259502`*^9}, {
   3.689367011899015*^9, 3.689367015867978*^9}, {3.689367153247529*^9, 
   3.689367206323691*^9}, {3.689367247408914*^9, 3.689367248036469*^9}, {
   3.689367302033547*^9, 3.689367310886952*^9}, {3.6893673462307987`*^9, 
   3.6893673521701403`*^9}, {3.689369878850483*^9, 3.6893699401182737`*^9}, {
   3.689369984431467*^9, 3.689370008268099*^9}, {3.689370139722228*^9, 
   3.6893701883886013`*^9}, {3.689370319772868*^9, 3.68937048623533*^9}, {
   3.689370543097661*^9, 3.689370603010064*^9}, {3.689370643304844*^9, 
   3.689370715754694*^9}, {3.6893707609011793`*^9, 3.689370788753543*^9}, {
   3.6893708503610764`*^9, 3.68937089386911*^9}, {3.6893709520294533`*^9, 
   3.689370991313218*^9}, {3.68937110122051*^9, 3.689371105886395*^9}, {
   3.689371351629882*^9, 3.689371352424885*^9}, {3.6893713911043377`*^9, 
   3.689371397634068*^9}, {3.689371450944954*^9, 3.6893714669035177`*^9}, {
   3.689379597123695*^9, 3.689379618528158*^9}, {3.6893800658412647`*^9, 
   3.689380107655545*^9}, {3.689380147046328*^9, 3.689380163705762*^9}, {
   3.689380516900826*^9, 3.6893806291131077`*^9}, {3.689380669373295*^9, 
   3.689380682154915*^9}, {3.689380720361383*^9, 3.68938072143121*^9}, {
   3.6893807648526297`*^9, 3.689380824872102*^9}, {3.6893808587961807`*^9, 
   3.689380929952517*^9}, {3.6893809629777*^9, 3.689381011626465*^9}, {
   3.689381140072743*^9, 3.6893811596103077`*^9}, {3.6893812092494373`*^9, 
   3.689381249183846*^9}, {3.689381320931625*^9, 3.689381430795158*^9}, {
   3.689381468281849*^9, 3.689381596664206*^9}, {3.689381634586686*^9, 
   3.68938165958743*^9}, {3.689381745716702*^9, 3.689381747005167*^9}, {
   3.689381810864211*^9, 3.689381823184843*^9}, 3.6893819064504013`*^9, 
   3.6893821036532393`*^9, {3.689382234813251*^9, 3.68938226091728*^9}, {
   3.689382448163898*^9, 3.689382489276244*^9}, {3.689382545586635*^9, 
   3.689382552106249*^9}, 3.689382667536173*^9, {3.68938283976926*^9, 
   3.689382859627572*^9}, {3.6893829395310497`*^9, 3.689382944793054*^9}, {
   3.689383035230661*^9, 3.689383070143779*^9}, 3.6893831174679737`*^9, {
   3.689383195881246*^9, 3.68938319760256*^9}, 3.689383274717383*^9, {
   3.689383446244471*^9, 3.689383465042652*^9}, {3.689441999174262*^9, 
   3.689442028345613*^9}, 3.689442080914761*^9, {3.68944276052829*^9, 
   3.689442772173946*^9}, {3.689442823062743*^9, 3.689442867202814*^9}, 
   3.689442908840117*^9, {3.689443003062086*^9, 3.689443062833192*^9}, {
   3.68944310499088*^9, 3.689443128121291*^9}, {3.689443262510543*^9, 
   3.6894432796049013`*^9}, 3.689443367301792*^9, {3.689443538695055*^9, 
   3.689443583081286*^9}, {3.6894436222104053`*^9, 3.689443644633772*^9}, {
   3.689443884223659*^9, 3.6894439793181257`*^9}, 3.689444084302771*^9, {
   3.6894441156320972`*^9, 3.6894441278941507`*^9}, {3.689444198447588*^9, 
   3.689444204405529*^9}, {3.689444238973638*^9, 3.689444277244298*^9}, {
   3.689444387922119*^9, 3.6894444369988813`*^9}, {3.689444481882731*^9, 
   3.6894444848182173`*^9}, {3.689445046227022*^9, 3.689445047590139*^9}, {
   3.689445310702054*^9, 3.689445376556175*^9}, {3.689445513052161*^9, 
   3.689445597880466*^9}, {3.689445940894218*^9, 3.6894459410655947`*^9}, {
   3.689445984345621*^9, 3.689446011727089*^9}, {3.689446047483818*^9, 
   3.689446093525387*^9}, {3.6894461552899218`*^9, 3.6894461616300364`*^9}, {
   3.689446201577766*^9, 3.6894462028265553`*^9}, {3.689446344023521*^9, 
   3.689446349960021*^9}, {3.689446707888968*^9, 3.6894467113828993`*^9}, {
   3.6894467427261333`*^9, 3.6894468263699007`*^9}, {3.689447101477737*^9, 
   3.689447125436328*^9}, {3.689447238659196*^9, 3.6894472791611633`*^9}, {
   3.689447503348441*^9, 3.689447519760088*^9}, {3.6894492186696987`*^9, 
   3.689449310575206*^9}, {3.689449346401531*^9, 3.689449374417046*^9}, {
   3.6894494628870783`*^9, 3.689449500431368*^9}, {3.689449587814497*^9, 
   3.6894496425948963`*^9}, {3.689449771202187*^9, 3.6894498010266*^9}, {
   3.689455503277112*^9, 3.689455503782692*^9}, {3.689456770189357*^9, 
   3.6894568165933447`*^9}, {3.689456947996417*^9, 3.6894569544148483`*^9}, {
   3.689457604089127*^9, 3.689457613689927*^9}, {3.689521116003747*^9, 
   3.689521123484941*^9}, {3.689521457868188*^9, 3.689521466595891*^9}, 
   3.6895368489741*^9, {3.6895369072470903`*^9, 3.689536935866446*^9}, {
   3.6895371621523647`*^9, 3.6895371637718678`*^9}, {3.689537209174243*^9, 
   3.689537361869454*^9}, {3.689538639338763*^9, 3.689538677323111*^9}, 
   3.6895387309399757`*^9, {3.689538769682457*^9, 3.689538807517692*^9}, {
   3.6895388510305967`*^9, 3.689538903424436*^9}, 3.689538948245453*^9, {
   3.6895390120091352`*^9, 3.68953901272692*^9}, {3.689539108333568*^9, 
   3.6895391931340847`*^9}, {3.689539223825111*^9, 3.6895392587495527`*^9}, {
   3.68953944070518*^9, 3.6895394435491467`*^9}, {3.689539812124218*^9, 
   3.689539878131008*^9}, {3.689540514815436*^9, 3.689540525654873*^9}, {
   3.6895405656253147`*^9, 3.689540613662771*^9}, {3.6895406965037518`*^9, 
   3.689540697001665*^9}, {3.6895408616611013`*^9, 3.689540915522971*^9}, 
   3.689541007126443*^9, 3.689556262084031*^9, {3.689558579525014*^9, 
   3.6895586715396347`*^9}, {3.6896050975324373`*^9, 3.689605098695798*^9}, {
   3.6896052263424473`*^9, 3.689605240080255*^9}, {3.68962145424057*^9, 
   3.689621495740903*^9}, {3.689630415429398*^9, 3.689630423031159*^9}, {
   3.6896304764298363`*^9, 3.689630489322452*^9}, {3.689630545523779*^9, 
   3.689630585663706*^9}, {3.689630882770129*^9, 3.689630942139409*^9}, {
   3.68971640260497*^9, 3.689716542068791*^9}, {3.689716582584997*^9, 
   3.68971658302883*^9}, {3.689717249088099*^9, 3.689717253513605*^9}, {
   3.689717339936393*^9, 3.689717376634945*^9}, {3.689717436717737*^9, 
   3.6897174390087137`*^9}, {3.689717473770196*^9, 3.689717509903956*^9}, {
   3.689717543874058*^9, 3.689717678100603*^9}, {3.689717822430208*^9, 
   3.6897178270286293`*^9}, {3.689717956573763*^9, 3.6897179745457582`*^9}, {
   3.689718101578752*^9, 3.6897181052288713`*^9}, {3.689718151078786*^9, 
   3.689718178890952*^9}, {3.6899736001985273`*^9, 3.689973607163198*^9}, {
   3.68997370982883*^9, 3.689973710209688*^9}, {3.689973830760192*^9, 
   3.68997385265239*^9}, {3.689973907830945*^9, 3.689973959453123*^9}, {
   3.689973992042062*^9, 3.6899740518927383`*^9}, {3.689974101418975*^9, 
   3.689974101587138*^9}, {3.689974209006908*^9, 3.689974214331923*^9}, {
   3.689974335329912*^9, 3.6899743653551817`*^9}, {3.689974397460367*^9, 
   3.689974427594534*^9}, 3.68997452478584*^9, {3.689975564973474*^9, 
   3.689975693030117*^9}, {3.6899757888073463`*^9, 3.6899758034270144`*^9}, {
   3.689988332580065*^9, 3.68998840053459*^9}, {3.6899884423424463`*^9, 
   3.6899884628782187`*^9}, 3.689988553957391*^9, {3.689988815302536*^9, 
   3.689988842095234*^9}, 3.689989629883314*^9, {3.690048893222271*^9, 
   3.690048910763214*^9}, 3.690050345777953*^9, {3.6900611540044317`*^9, 
   3.690061163184081*^9}, {3.690061380859367*^9, 3.690061388843255*^9}, {
   3.690062495171585*^9, 3.690062495810842*^9}, {3.6900702938258553`*^9, 
   3.690070301737187*^9}, 3.690070354701334*^9, {3.690070389445404*^9, 
   3.6900704129863873`*^9}, {3.6900714490921497`*^9, 3.690071464635138*^9}, {
   3.69007153442715*^9, 3.6900715776899147`*^9}, {3.690071981591666*^9, 
   3.6900719816911287`*^9}, {3.6900741144513474`*^9, 3.690074151171763*^9}, {
   3.690074205381074*^9, 3.6900742448666363`*^9}, {3.690074277913374*^9, 
   3.690074291945341*^9}, {3.690074907224853*^9, 3.6900749474369097`*^9}, 
   3.690075013959237*^9, 3.690075096746024*^9, {3.6901237371315928`*^9, 
   3.6901237391447983`*^9}, {3.6901628785725327`*^9, 3.690162952010282*^9}, {
   3.690213988884797*^9, 3.690214022577428*^9}, {3.690215139270214*^9, 
   3.6902151406852427`*^9}, 3.6902156158925858`*^9, {3.690215666234852*^9, 
   3.690215668719186*^9}, {3.690215728846786*^9, 3.690215731378388*^9}, {
   3.690218308104642*^9, 3.690218320943667*^9}, {3.690222597394476*^9, 
   3.690222612835493*^9}, {3.6902227571076107`*^9, 3.690222757465837*^9}, {
   3.6902343003534603`*^9, 3.6902343050992193`*^9}, {3.690236157483843*^9, 
   3.690236191573625*^9}, {3.690236224037539*^9, 3.6902363852146053`*^9}, {
   3.690236495480297*^9, 3.690236638443665*^9}, {3.690299259636938*^9, 
   3.69029926686723*^9}, {3.690299495634242*^9, 3.6902995454965363`*^9}, {
   3.69029977817924*^9, 3.690299865067086*^9}, {3.690299899521201*^9, 
   3.690299967893558*^9}, {3.6903000062334003`*^9, 3.690300027868432*^9}, {
   3.690300338734437*^9, 3.6903003429258537`*^9}, {3.690300718984847*^9, 
   3.690300719003559*^9}, {3.690300904882085*^9, 3.6903009054400387`*^9}, {
   3.690301344507966*^9, 3.690301472257608*^9}, {3.69030161409197*^9, 
   3.6903016199512043`*^9}, {3.690302316223791*^9, 3.690302407868083*^9}, {
   3.6903246678766527`*^9, 3.69032467051334*^9}, {3.6912133778870897`*^9, 
   3.691213387118597*^9}, 3.6912161516998587`*^9, {3.691216362962616*^9, 
   3.691216363543071*^9}, {3.6912163943664923`*^9, 3.691216406196951*^9}, 
   3.69121668844137*^9, {3.691216756702052*^9, 3.691216763396319*^9}, 
   3.691216973046343*^9, {3.6912208987167187`*^9, 3.691220914828557*^9}, {
   3.6912213774063053`*^9, 3.691221377791205*^9}, {3.691223609797118*^9, 
   3.691223641303594*^9}, {3.691400737454256*^9, 3.6914007453009253`*^9}, {
   3.691934382710494*^9, 3.6919345059982986`*^9}, 3.691934567885255*^9, {
   3.6919346138334723`*^9, 3.69193462961274*^9}, {3.691934784812909*^9, 
   3.6919347867794857`*^9}, {3.691934860514835*^9, 3.6919348668613*^9}, 
   3.691934983750972*^9, {3.6919350364585543`*^9, 3.691935060604478*^9}, {
   3.692016778597726*^9, 3.692016785142531*^9}, 3.6933488449456673`*^9, 
   3.693350188291607*^9, {3.6935109368817797`*^9, 3.693510962356903*^9}, {
   3.6935110753376637`*^9, 3.693511076755004*^9}, {3.693511134578353*^9, 
   3.693511427714354*^9}, {3.693511465561439*^9, 3.693511767648074*^9}, {
   3.693511833861059*^9, 3.693511839579523*^9}, {3.693511901229659*^9, 
   3.6935119027390747`*^9}, 3.69351206941241*^9, {3.693512139047895*^9, 
   3.693512186530738*^9}, {3.6935123600818233`*^9, 3.693512374018162*^9}, {
   3.6935124686300087`*^9, 3.6935124694974546`*^9}, {3.693512696672449*^9, 
   3.69351274086639*^9}, {3.693512782855393*^9, 3.69351278983908*^9}, {
   3.693512823112814*^9, 3.693512846828691*^9}, {3.6935132966101933`*^9, 
   3.693513303335702*^9}, {3.6935133552259912`*^9, 3.693513372817685*^9}, {
   3.693513997892284*^9, 3.693514035222329*^9}, {3.693514092190651*^9, 
   3.693514150932417*^9}, {3.693514253605941*^9, 3.693514267575493*^9}, {
   3.693583098225276*^9, 3.693583120733716*^9}, {3.693604557648251*^9, 
   3.693604586751902*^9}, 3.693945251569346*^9, {3.69394660831003*^9, 
   3.693946609143648*^9}, {3.695057389302431*^9, 3.695057395401503*^9}, {
   3.6950592690885763`*^9, 3.695059290379527*^9}, {3.695062251704606*^9, 
   3.6950622557166986`*^9}, {3.697484216301098*^9, 3.697484227594358*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["End", "Section",
 CellChangeTimes->{{3.689620716434772*^9, 3.689620720066921*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "@@", 
   RowBox[{"Names", "[", "\"\<ERGE`*\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.689620763206502*^9, 3.689620774286572*^9}, 
   3.6903004876572323`*^9}]
}, Closed]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1365, 718},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 145, 2, 92, "Title"],
Cell[CellGroupData[{
Cell[750, 28, 94, 1, 64, "Section"],
Cell[847, 31, 1775, 41, 275, "Input",
 InitializationCell->True],
Cell[2625, 74, 11287, 241, 2277, "Input",
 InitializationCell->True],
Cell[13915, 317, 119, 3, 32, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[14071, 325, 110, 1, 64, "Section"],
Cell[14184, 328, 12823, 310, 1595, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27044, 643, 126, 2, 50, "Section",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[27195, 649, 92, 1, 44, "Subsection"],
Cell[27290, 652, 393, 12, 32, "Input",
 InitializationCell->True],
Cell[27686, 666, 549, 14, 32, "Input",
 InitializationCell->True],
Cell[28238, 682, 487, 13, 32, "Input",
 InitializationCell->True],
Cell[28728, 697, 445, 13, 32, "Input",
 InitializationCell->True],
Cell[29176, 712, 1103, 31, 32, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[30316, 748, 112, 1, 36, "Subsection"],
Cell[30431, 751, 530, 13, 32, "Input",
 InitializationCell->True],
Cell[30964, 766, 915, 25, 32, "Input",
 InitializationCell->True],
Cell[31882, 793, 1189, 29, 32, "Input",
 InitializationCell->True],
Cell[33074, 824, 1454, 36, 55, "Input",
 InitializationCell->True],
Cell[34531, 862, 1135, 27, 32, "Input",
 InitializationCell->True],
Cell[35669, 891, 2616, 56, 99, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[38322, 952, 106, 1, 36, "Subsection"],
Cell[38431, 955, 7506, 189, 275, "Input",
 InitializationCell->True],
Cell[45940, 1146, 5428, 106, 187, "Input",
 InitializationCell->True],
Cell[51371, 1254, 1112, 21, 32, "Input",
 InitializationCell->True],
Cell[52486, 1277, 3292, 71, 143, "Input",
 InitializationCell->True],
Cell[55781, 1350, 3760, 71, 121, "Input",
 InitializationCell->True],
Cell[59544, 1423, 625, 16, 32, "Input",
 InitializationCell->True],
Cell[60172, 1441, 2905, 62, 77, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[63114, 1508, 119, 1, 36, "Subsection"],
Cell[63236, 1511, 324, 7, 32, "Input",
 InitializationCell->True],
Cell[63563, 1520, 3236, 81, 187, "Input",
 InitializationCell->True],
Cell[66802, 1603, 4672, 123, 253, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[71511, 1731, 158, 2, 36, "Subsection"],
Cell[71672, 1735, 399, 13, 32, "Input",
 InitializationCell->True],
Cell[72074, 1750, 2323, 57, 143, "Input",
 InitializationCell->True],
Cell[74400, 1809, 449, 9, 32, "Input"],
Cell[74852, 1820, 4202, 97, 187, "Input",
 InitializationCell->True],
Cell[79057, 1919, 1089, 30, 77, "Input",
 InitializationCell->True],
Cell[80149, 1951, 7388, 190, 429, "Input",
 InitializationCell->True],
Cell[87540, 2143, 8092, 208, 539, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95681, 2357, 90, 1, 64, "Section"],
Cell[95774, 2360, 1600, 38, 99, "Input",
 InitializationCell->True],
Cell[97377, 2400, 1977, 41, 99, "Input",
 InitializationCell->True],
Cell[99357, 2443, 4164, 99, 143, "Input",
 InitializationCell->True],
Cell[103524, 2544, 368, 11, 32, "Input",
 InitializationCell->True],
Cell[103895, 2557, 1571, 42, 77, "Input",
 InitializationCell->True],
Cell[105469, 2601, 3464, 97, 187, "Input",
 InitializationCell->True],
Cell[108936, 2700, 15923, 348, 869, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[124896, 3053, 96, 1, 64, "Section"],
Cell[124995, 3056, 13176, 304, 693, "Input",
 InitializationCell->True],
Cell[138174, 3362, 265, 6, 32, "Input"],
Cell[138442, 3370, 44302, 924, 6875, "Input",
 InitializationCell->True],
Cell[182747, 4296, 49031, 980, 6831, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[231815, 5281, 88, 1, 64, "Section"],
Cell[231906, 5284, 376, 11, 77, "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
